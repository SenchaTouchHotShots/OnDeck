/**
* Default authentication panel used by Ext.io.Controller when the user needs to login.
*
* Subclass or replace this class ot create a custom user login experience. 
* Ext.io.Controller listens to events generated by this class and will call methods
* where noted.  To work correctly any replacement or sub-class must provide the same interface.
*
*/
if(!Ext.getVersion('extjs')){
Ext.define("Ext.io.ux.AuthSencha", {
    extend: 'Ext.Container',
    requires: ["Ext.TitleBar", "Ext.MessageBox", "Ext.form.Panel", "Ext.form.FieldSet", "Ext.field.Password",  "Ext.field.Email", "Ext.io.ux.RecoverCodePanel"],
    
    
    
    
    /**
     * @event loginUser
     * Fired when the user has entered their auth credentials.
     * {Ext.io.Controller} listens for this event and will attempt to login 
     * the user with the passed credentials. 
     * @param {Object} auth Key/values given by the user to authenticate with.
     */
     
     /**
      * @event registerUser
      * Fired when the user wants to create a new account.
      * {Ext.io.Controller} listens for this event and will attempt 
      * to registers the user with the passed information.
      * @param {Object} auth Key/values given by the user to register with.
      */
     
    /**
      * @event cancel
      * Fired when the user doesn't want to login.
      * {Ext.io.Controller} listens for this event and will 
      * close the login pannel.
      */
     
    
    config: {
        layout: "fit",
        fullscreen: true,
        
        control: {
            "button[action=siologin]": {
                tap: "doAuth"
            },
            
            "button[action=showRegister]": {
              tap: "showRegister"
            },

            "button[action=sioRegister]": {
              tap: "doRegister"
            },
            
            "button[action=cancellogin]": {
              tap: "hideLogin"
            },
            
            "button[action=sioRecover]": {
              tap: "showRecoverPanel"
            },
            
            "button[action=sioRecoverShowCode]": {
              tap: "showRecoverCodePanel"
            }
            
            
        },

 
        items: [
        {
            docked: 'top',
            xtype: 'titlebar',
            title: 'Login',
            items: [
            {
                text: "cancel",
                action: "cancellogin"
            },
             {
                  text: "register",
                  action: "showRegister",
                  align: 'right'
              }
            ]
        },
        {
            xtype: "panel",
            layout: "card",
            items: [
            {
                xtype: "formpanel",
                items: [
                {
                    xtype: 'fieldset',
                    defaults:{
                        margin: "10"
                    },
              
                    items: [
                    {
                        xtype: 'emailfield',
                        placeHolder: "Email",
                        name: 'email'
                    },
                    {
                        xtype: 'passwordfield',
                        placeHolder: Ext.io.ux.Strings.LABEL_PASSWORD,
                        name: 'password'
                    },
                    {
                        xtype: 'button',
                        text: 'Login',
                        align: "center",
                        action: "siologin"
                    },
                    {
                        xtype: 'button',
                        text: 'Register',
                        action: "sioRegister",
                        align: "center",
                        hidden: "true"
                    },
                    {
                        xtype: 'button',
                        text: 'Recover Password',
                        action: "sioRecover",
                        align: "center"
                    }
                    ]
                }
                ]

            }

            ]
        }
        ]
    },
    
    
    /**
    * Reset the form to its default state.
    */
    resetForm: function() {
        this.showLoginPanel();
        this.setMasked(false);
        var form = this.getForm();
        form.reset();
    },
    
    
    /**
    * @private
    */
    doAuth: function() {
        this.setMasked({
              xtype: 'loadmask',
              message: 'Authorizing',
              indicator: true
        });
        var form = this.getForm();
        var auth = form.getValues();
        auth["provider"] = "senchaio",
        this.fireEvent("loginUser", auth);
    },
    
    
    /**
    * {Ext.io.Controller} will call this method when login fails.
    */
    showLoginErrors: function() {
        this.setMasked(false);
        Ext.Msg.alert('Login Error', 'Invalid email or passsword', Ext.emptyFn);
    },
    

    /**
    * @private
    */
    doRegister: function() {  
        this.setMasked(  {
              xtype: 'loadmask',
              message: 'Creating Account',
              indicator: true
        });
        var form = this.getForm();
        var auth = form.getValues();
        this.fireEvent("registerUser", auth);
    },
    
    

    /**
    * @private
    */
    recoverPassword: function() {  
        this.setMasked(  {
              xtype: 'loadmask',
              message: 'Sending Recovery Email',
              indicator: true
        });
        var form = this.getForm();
        var values = form.getValues();
        var email = values["email"];
        
        var recover = {};
        
        recover.email = email;
        
        
        Ext.io.Group.getCurrent(function(group){
            if(group){
                group.recoverPassword(recover, function(sent, error){
                    this.setMasked(false);
                    if(sent){
                        this.showRecoverCodePanel(email);    
                    } else {
                        Ext.Msg.alert('Error', error.message, Ext.emptyFn);
                    }
                    
                }, this);
            }    
        }, this);

    },
    
    
    /**
    * {Ext.io.Controller} will call this method when login fails.
    */
    showRecoverResults: function() {
        this.setMasked(false);
        Ext.Msg.alert('Login Error', 'Invalid email or passsword', Ext.emptyFn);
    },
    
    
    
    /**
    * @private
    */
    showRegister: function() {
        this.showLoginPanel();
        this.mode = "register";    
        var email = this.getEmailField();
        email.show();
        this.getRegisterBtn().show();
        this.getLoginBtn().hide();
  
    },
    
    /**
    * {Ext.io.Controller} will call this method when registration fails.
    */
    showRegisterErrors: function(errors) {
        this.setMasked(false);
        Ext.Msg.alert('Register Error', 'Could not create user', Ext.emptyFn);
    },
    
   
    showLoginPanel: function(){
        this.mode = "login";
        this.getPasswordField().show();
        this.getRegisterBtn().hide();
        this.getLoginBtn().show(); 
        //this.getRecoveryCodeBtn().hide();
    },
    
    showRecoverPanel: function(){
        if(this.mode == "recover"){
            this.recoverPassword();
        }//
        
        this.mode = "recover";
        this.getPasswordField().hide();
        this.getRegisterBtn().hide();
        this.getLoginBtn().hide();
        
    },
    
    showRecoverCodePanel: function(email){
        if(!this.recoverPanel){
            this.recoverPanel = Ext.create("Ext.io.ux.RecoverCodePanel",{});    
            this.recoverPanel.on("passwordrest", this.onPasswordReset, this);
            Ext.Viewport.add(this.recoverPanel);
        }
        this.recoverPanel.setRecoveryId(email);
        this.recoverPanel.showBy(this.getRecoverBtn());
        
    },
    
    onPasswordReset: function(){
        this.showLoginPanel();
    },
    
    /**
    * @private
    */
    hideLogin: function(){
        this.fireEvent("cancel");
    },
    
    /**
    * @private
    */
    getForm: function(){
        return this.query('.formpanel')[0];
    },
    
    /**
    * @private
    */
    getEmailField: function(){
        return this.query('.emailfield')[0];
    },
    

    /**
    * @private
    */
    getPasswordField: function(){
        return this.query('.passwordfield')[0];
    },


    
    /**
    * @private
    */
    getRegisterBtn: function(){
        return this.query('button[action=sioRegister]')[0];
    },
    
    /**
    * @private
    */
    getLoginBtn: function(){
        return this.query('button[action=siologin]')[0];
    },
    
    
    /**
    * @private
    */
    getRecoverBtn: function(){
        return this.query('button[action=sioRecover]')[0];
    },
 
    
    
    /**
    * @private
    */
    getRecoveryCodeBtn: function(){
        return this.query('button[action=sioRecoverShowCode]')[0];
    }
    
    
    

});
}