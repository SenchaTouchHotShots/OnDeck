/*

Sencha.io
Copyright (c) 2011, 2012, 2013, Sencha Inc.
All rights reserved.
licensing@sencha.com

License details available at

http://www.sencha.com/legal/sencha-io-terms-of-service

This software is distributed WITHOUT ANY WARRANTY, without the implied 
warranty of MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND 
NON-INFRINGEMENT OF THIRD-PARTY INTELLECTUAL PROPERTY RIGHTS.  

*/
Ext.define("Ext.cf.Overrides",{requires:["Ext.data.Store"]},function(){var h=function(){Ext.data.Store.prototype.storeSync=Ext.data.Store.prototype.sync;Ext.data.Store.override({sync:function(k,j){if(typeof(this.getProxy().sync)==="undefined"){return this.storeSync()}else{return this.getProxy().sync(this,k,j)}}})};var b=function(){Ext.io_Observable="Ext.util.Observable";Ext.data.Store.prototype.storeSync=Ext.data.AbstractStore.prototype.sync;Ext.data.Store.override({sync:function(k,j){if(typeof(this.getProxy().sync)==="undefined"){return this.storeSync()}else{return this.getProxy().sync(this,k,j)}}});Ext.data.Model.getFields=function(){return this.prototype.fields};Ext.data.Field.override({getName:function(){return this.name},getEncode:function(){return this.encode},getDecode:function(){return this.decode},getType:function(){return this.type}});Ext.data.Operation.override({setResultSet:function(j){this.resultSet=j}});Ext.data.ResultSet.override({getRecords:function(j){return this.records}})};var e="ERROR: The Sencha.io SDK requires either the Sencha Touch SDK or the Sencha Ext JS SDK.";if(typeof Ext==="undefined"){console.log(e);throw e}else{var g=Ext.getVersion("core"),i;if(!g){i=e+" Ext is defined, but getVersion('core') did not return the expected version information.";console.log(i);throw i}else{var f=g.version;var a=Ext.getVersion("touch");var c=Ext.getVersion("extjs");var d=false;if(a&&c){i="WARNING: Both the Sencha Touch SDK and the Sencha Ext JS SDK have been loaded. This could lead to unpredictable behavior.";console.warn(i)}if(!a&&!c){i=e+" The Ext Core SDK is on its own is not sufficient.";console.warn(i);throw i}if(c){console.warn("Sencha.io does not officially support Extjs.  Full compatibility is planned for a future release. Proceed with caution.");b()}else{if(a){if(a.major>=2){h()}else{d=true;i=e+" Version "+f+" of the Sencha Touch SDK and this version of the Sencha.io SDK are not fully compatible.";console.log(i)}}else{i=e+" They were here, but now I can't find them.";console.log(i);throw i}}}}});Ext.define("Ext.cf.ServiceDefinitions",{statics:{AppService:"0.7",AuthorizationService:"0.7",AuthProvider:"0.7",ChannelService:"0.7",CnameVerifierService:"0.7",ContentService:"0.7",CourierService:"0.7",DeployService:"0.7",DeviceAllocatorService:"0.7",DynectService:"0.7",EmailService:"0.7",ExtSvcLifecycleService:"0.1",ExtSvcSubscriberService:"0.1",ExtSvcWebhookService:"0.1",FileService:"0.7",GraphvizService:"0.7",GroupManager:"0.7",GroupService:"0.7",InstrumentationRpcService:"0.7",InstrumentationService:"0.7",MessagingService:"0.7",MockAsyncService:"0.7",MockRpcService:"0.7",NamingEventService:"0.7",NamingRpcService:"0.7",NamingService:"0.7",NotificationService:"0.7",PresenceService:"0.7",ReaperService:"0.7",RegistryRpcService:"0.7",RegistryService:"0.7",RpcRelayService:"0.7",RpcStubService:"0.7",RpcSubscriberService:"0.7",SeedDataService:"0.7",SessionService:"0.7",StatusService:"0.7",SyncRpcService:"0.7",SyncService:"0.7",TeamManager:"0.7",TeamService:"0.7",VersionService:"0.7"}});Ext.define("Ext.cf.util.LoggerConstants",{statics:{NONE:10,ERROR:5,WARNING:4,INFO:3,DEBUG:2,PERF:1,STR_TO_LEVEL:{perf:1,debug:2,info:3,warn:4,error:5,none:10}}});Ext.define("Ext.cf.util.Logger",{statics:{level:Ext.cf.util.LoggerConstants.ERROR,setLevel:function(a){if(Ext.cf.util.LoggerConstants.STR_TO_LEVEL[a]){Ext.cf.util.Logger.level=Ext.cf.util.LoggerConstants.STR_TO_LEVEL[a]}else{Ext.cf.util.Logger.level=Ext.cf.util.LoggerConstants.NONE}},perf:function(){if(Ext.cf.util.Logger.level<=Ext.cf.util.LoggerConstants.PERF){Ext.cf.util.Logger.message("PERF:",arguments)}},debug:function(){if(Ext.cf.util.Logger.level<=Ext.cf.util.LoggerConstants.DEBUG){Ext.cf.util.Logger.message("DEBUG:",arguments)}},info:function(){if(Ext.cf.util.Logger.level<=Ext.cf.util.LoggerConstants.INFO){Ext.cf.util.Logger.message("INFO:",arguments)}},warn:function(){if(Ext.cf.util.Logger.level<=Ext.cf.util.LoggerConstants.WARNING){Ext.cf.util.Logger.message("WARNING:",arguments)}},error:function(){if(Ext.cf.util.Logger.level<=Ext.cf.util.LoggerConstants.ERROR){Ext.cf.util.Logger.message("ERROR:",arguments)}},trace:function(b,h){var d=[];var a=h.length;for(var c=0;c<a;c++){var g=h[c];if(g==global){d.push("global")}else{if(g==Ext.io.Io){d.push("Ext.io.Io")}else{if(typeof g==="function"){d.push("function")}else{try{d.push(JSON.stringify(g))}catch(f){d.push("unknown")}}}}}this.debug("TRACE",b,"(",d.join(", "),")")},message:function(e,d){var c=Array.prototype.slice.call(d);c.unshift(e);if(typeof console!="undefined"){switch(typeof console.log){case"function":console.log.apply(console,c);break;case"object":console.log(c.join(" "));break}}}}});Ext.define("Ext.cf.Utilities",{requires:["Ext.cf.util.Logger"],statics:{delegate:function(d,b,a){if(b===undefined){var c="Error - Tried to delegate '"+a+"' to undefined instance.";Ext.cf.util.Logger.error(c);throw c}a.forEach(function(f){var e=b[f];if(e===undefined){c="Error - Tried to delegate undefined method '"+f+"' to "+b;Ext.cf.util.Logger.error(c);throw c}d[f]=function(){return e.apply(b,arguments)}})},check:function(f,c,e,a,b){if(a===undefined){var d="Error - "+f+"."+c+" - "+e+" not provided.";Ext.cf.util.Logger.error(d)}else{b.forEach(function(i){var h=a[i];if(h===undefined){var g="Error - "+f+"."+c+" - "+e+"."+i+" not provided.";Ext.cf.util.Logger.error(g)}})}},wrapMethod:function(b,c,d,e){if(b[c]){return b}else{var a=function(){if(d){d.call(this,b,arguments)}b.apply(this,arguments);if(e){e.call(this,b,arguments)}};a[c]=true;a.displayName=b.displayName;return a}},wrapClass:function(b,d,e,f){for(var c in b){if(b.hasOwnProperty(c)){var a=b[c];if(a.displayName){b[c]=this.wrapMethod(a,d,e,f)}}}}}});Ext.define("Ext.cf.data.DatabaseDefinition",{requires:["Ext.cf.Utilities"],config:{groupId:undefined,userId:undefined,databaseName:undefined,generation:undefined,idProperty:undefined,version:2},constructor:function(a){var b=Ext.cf.util.ParamValidator.validateApi([{name:"config",type:"object",keys:[{name:"databaseName",type:"string"},{name:"generation",type:"number|string"}]}],arguments,"DatabaseDefinition","constructor");this.initConfig(a)},hasOwner:function(){return this.getUserId()!==undefined||this.getGroupId()!==undefined}});Ext.define("Ext.cf.data.ModelWrapper",{override:"Ext.data.Model",getOid:function(){return this.eco.getOid()},getCS:function(a){return this.eco.getCS(a)},getCSV:function(){return this.eco.getCSV()},setValueCS:function(b,d,a,c){return this.eco.setValueCS(b,d,a,c)},changeReplicaId:function(b,a){return this.eco.changeReplicaId(this.getIdProperty(),b,a)},setUpdateState:function(b){var c=this.getChanges();for(var a in c){this.setUpdateStateValue(b,[a],this.modified[a],c[a])}},setUpdateStateValue:function(c,g,b,f){if(this.eco.isComplexValueType(f)){var d,e;if(b){d={};if(this.eco.isComplexValueType(b)){if(this.eco.valueType(b)===this.eco.valueType(f)){d=Ext.Array.difference(f,b);var h=Ext.Array.intersect(f,b);for(e in h){if(h.hasOwnProperty(e)){if(b[e]!==f[e]){d[e]=f[e]}}}}else{d=f;this.eco.setCS(c,g,c.generateChangeStamp())}}else{d=f;this.eco.setCS(c,g,c.generateChangeStamp())}}else{d=f;this.eco.setCS(c,g,c.generateChangeStamp())}for(e in d){if(d.hasOwnProperty(e)){var a=b?b[e]:undefined;this.setUpdateStateValue(c,g.concat(e),a,f[e])}}}else{this.eco.setCS(c,g,c.generateChangeStamp())}},setDestroyState:function(a){var b=a.generateChangeStamp();this.eco.setValueCS(a,"_ts",b.asString(),b)},getUpdates:function(a){return this.eco.getUpdates(a)},putUpdate:function(a,b){return this.eco.setValueCS(a,b.p,b.v,b.c)}});Ext.define("Ext.cf.ds.CS",{r:"0",t:0,s:0,constructor:function(a){this.set(a)},set:function(a){if(typeof a==="string"||a instanceof String){this.from_s(a)}else{if(typeof a==="object"){this.r=String(a.r||"0");this.t=a.t||0;this.s=a.s||0}}},changeReplicaId:function(b,a){if(this.r==b){this.r=a;return true}return false},greaterThan:function(a){return this.compare(a)>0},lessThan:function(a){return this.compare(a)<0},equals:function(a){return this.compare(a)===0},compare:function(a){var b=this.t-a.t;if(b===0){b=this.s-a.s;if(b===0){b=this.r.localeCompare(a.r)}}return b},cs_regex:/([^-]+)-(\d+)-?(\d+)?/,from_s:function(b){var a=b.match(this.cs_regex);if(a&&a.length>0){this.r=a[1];this.t=parseInt(a[2],10);this.s=a[3]?parseInt(a[3],10):0}else{throw"Error - CS - Bad change stamp '"+b+"'."}return this},asString:function(){return this.r+"-"+this.t+(this.s>0?"-"+this.s:"")}});Ext.define("Ext.cf.data.Updates",{requires:["Ext.cf.ds.CS"],updates:undefined,constructor:function(a){this.updates=a||[];this.updates.forEach(function(b){if(!(b.c instanceof Ext.cf.ds.CS)){b.c=new Ext.cf.ds.CS(b.c)}});this.updates.sort(function(d,c){return d.c.compare(c.c)})},push:function(b){var a=this.updates[this.updates.length];if(!b.c.greaterThan(a.c)){throw"Error - Updates - Tried to push updates in wrong order. "+JSON.stringify(b)+" <= "+JSON.stringify(a)}this.updates.push(b)},isEmpty:function(){return this.updates.length<1},length:function(){return this.updates.length},oids:function(){return Ext.Array.unique(Ext.Array.pluck(this.updates,"i"))},forEach:function(b,a){this.updates.forEach(b,a)},encode:function(){var e=[];var a=this.updates.length;var c,f,d;for(var b=0;b<a;b++){f=this.updates[b];d=((f.c instanceof Ext.cf.ds.CS)?f.c.asString():f.c);if(f.i===c){e.push([f.p,f.v,d])}else{e.push([f.i,f.p,f.v,d]);c=f.i}}return e},decode:function(j){this.updates=[];if(j){var e=j.length;var f,d,a,b,k,h;for(var g=0;g<e;g++){f=j[g];switch(f.length){case 3:a=d;b=f[0];k=f[1];h=f[2];break;case 4:a=f[0];b=f[1];k=f[2];h=f[3];d=a;break}h=((h instanceof Ext.cf.ds.CS)?h:new Ext.cf.ds.CS(h));this.updates.push({i:a,p:b,v:k,c:h})}}return this}});Ext.define("Ext.cf.ds.RealClock",{constructor:function(){this.epoch=new Date("01 Jan 2011 00:00:00 GMT")},now:function(){return this.ms_to_s(new Date().getTime()-this.epoch)},ms_to_s:function(a){return Math.floor(a/1000)}});Ext.define("Ext.cf.ds.LogicalClock",{requires:["Ext.cf.ds.RealClock","Ext.cf.ds.CS"],r:undefined,t:undefined,s:undefined,clock:undefined,local_offset:undefined,global_offset:undefined,constructor:function(a){this.set(a)},set:function(a){if(a){this.clock=a.clock||Ext.create("Ext.cf.ds.RealClock");this.r=a.r;this.t=a.t||this.clock.now();this.s=a.s!==undefined?a.s:-1;this.local_offset=a.local_offset||0;this.global_offset=a.global_offset||0}},setClock:function(a){this.clock=a;this.t=this.clock.now();this.s=-1},generateChangeStamp:function(){var a=this.clock.now();this.update_local_offset(a);this.s+=1;if(this.s>255){this.t=a;this.local_offset+=1;this.s=0}return new Ext.cf.ds.CS({r:this.r,t:this.global_time(),s:this.s})},seenCSV:function(a){return this.seenChangeStamp(a.maxChangeStamp())},seenChangeStamp:function(a){var c=false;if(a){var b=this.clock.now();if(b>this.t){c=this.update_local_offset(b)}c=c||this.update_global_offset(a)}return c},setReplicaId:function(a){var b=this.r!==a;this.r=a;return b},update_local_offset:function(d){var c=false;var e=d-this.t;if(e>0){var b=this.global_time();this.t=d;if(e>this.local_offset){this.local_offset=0}else{this.local_offset-=e}var a=this.global_time();if(a>b){this.s=-1}c=true}else{if(e<0){this.t=d;this.local_offset+=-e;c=true}}return c},update_global_offset:function(c){var f=false;var d=new Ext.cf.ds.CS({r:this.r,t:this.global_time(),s:this.s+1});var e=d.t;var h=d.s;var a=c.t;var b=c.s;if(a==e&&b>=h){this.s=b;f=true}else{if(a>e){var g=a-e;if(g>0){this.global_offset+=g;this.s=b;f=true}}}return f},global_time:function(){return this.t+this.local_offset+this.global_offset},as_data:function(){return{r:this.r,t:this.t,s:this.s,local_offset:this.local_offset,global_offset:this.global_offset}}});Ext.define("Ext.cf.ds.CSV",{requires:["Ext.cf.ds.CS"],v:undefined,constructor:function(a){this.v={};if(a===undefined){}else{if(a instanceof Ext.cf.ds.CSV){this.addX(a)}else{this.addX(a.v)}}},get:function(a){if(a instanceof Ext.cf.ds.CS){return this.v[a.r]}else{return this.v[a]}},setCS:function(a){this.v[a.r]=Ext.create("Ext.cf.ds.CS",{r:a.r,t:a.t,s:a.s})},setReplicaId:function(a){this.addReplicaIds([a])},addReplicaIds:function(a){var b=[];if(a instanceof Array){if(a[0] instanceof Ext.cf.ds.CS){b=Ext.Array.map(a,function(c){return this.addX(Ext.create("Ext.cf.ds.CS",{r:a.r}))},this)}else{b=Ext.Array.map(a,function(c){return this.addX(Ext.create("Ext.cf.ds.CS",{r:c}))},this)}}else{if(a instanceof Ext.cf.ds.CSV){b=a.collect(function(c){return this.addX(Ext.create("Ext.cf.ds.CS",{r:c.r}))},this)}}return Ext.Array.contains(b,true)},addX:function(a){var c=false;if(a===undefined){}else{if(a instanceof Ext.cf.ds.CSV){c=this.addCSV(a)}else{if(a instanceof Array){var b=Ext.Array.map(a,this.addX,this);c=Ext.Array.contains(b,true)}else{if(a instanceof Ext.cf.ds.CS){c=this.addCS(a)}else{if(typeof a=="string"||a instanceof String){c=this.addX(Ext.create("Ext.cf.ds.CS",a))}}}}}return c},addCS:function(a){var d=false;if(a!==undefined){var c=a.r;var b=this.v[c];if(!b||a.greaterThan(b)){this.v[c]=Ext.create("Ext.cf.ds.CS",{r:a.r,t:a.t,s:a.s});d=true}}return d},addCSV:function(a){var c=false;if(a!==undefined){var b=a.collect(this.addCS,this);c=Ext.Array.contains(b,true)}return c},setCSV:function(a){a.collect(this.setCS,this)},changeReplicaId:function(b,a){var c=this.v[b];var d=false;if(c){c.r=a;delete this.v[b];this.v[a]=c;d=true}return d},isEmpty:function(){for(var a in this.v){return false}return true},maxChangeStamp:function(){if(!this.isEmpty()){var b=Ext.create("Ext.cf.ds.CS");for(var a in this.v){b=(this.v[a].greaterThan(b)?this.v[a]:b)}return b}},minChangeStamp:function(){if(!this.isEmpty()){var b;for(var a in this.v){b=(!b||this.v[a].lessThan(b)?this.v[a]:b)}return b}},intersect:function(a){for(var b in a.v){if(this.v[b]!==undefined){this.v[b]=a.v[b]}}},dominates:function(a){return Ext.Array.some(this.compare(a),function(b){return b>0})},dominated:function(a){var c=[];for(var b in this.v){if(this.v[b]!==undefined&&this.compare(this.v[b])>0){c.push(this.v[b])}}return c},dominant:function(a){var c=[];var f=[];for(var d in this.v){var b=this.v[d];if(b!==undefined){var e=a.compare(b);if(e<0){f.push(b)}else{if(e>0){c.push(b)}}}}return{dominant:f,dominated:c}},equals:function(a){return Ext.Array.every(this.compare(a),function(b){return b===0})},compare:function(a){var d,b;if(a instanceof Ext.cf.ds.CS){d=this.get(a);b=a;return[d?d.compare(b):-1]}else{if(a instanceof Ext.cf.ds.CSV){var e=[];for(var c in this.v){d=this.v[c];if(d instanceof Ext.cf.ds.CS){b=a.get(d);e.push(b?d.compare(b):1)}}return e}else{throw"Error - CSV - compare - Unknown type: "+(typeof a)+": "+a}}return[-1]},encode:function(){return this.collect(function(a){return a.asString()}).join(".")},decode:function(a){if(a){this.addX(a.split("."))}return this},asString:function(a){return"CSV: "+this.collect(function(b){return b.asString()}).join(", ")},as_data:function(){return{v:this.collect(function(a){return a.asString()}),id:"csv"}},collect:function(c,b){var d=[];for(var a in this.v){if(this.v.hasOwnProperty(a)){d.push(c.call(b||this,this.v[a]))}}return d}});Ext.define("Ext.cf.data.Transaction",{requires:["Ext.cf.ds.LogicalClock","Ext.cf.ds.CSV","Ext.cf.util.Logger"],constructor:function(a,c,b){this.proxy=a;this.store=a.getStore();this.generatorChanged=false;this.originalGenerator=a.generator;this.modifiedGenerator=Ext.create("Ext.cf.ds.LogicalClock",a.generator);this.csvChanged=false;this.originalCSV=a.csv;this.modifiedCSV=Ext.create("Ext.cf.ds.CSV",a.csv);this.cache={};this.toCreate=[];this.toUpdate=[];this.toDestroy=[];this.store.getCSIndex(function(d){this.csivChanged=false;this.csiv=d;c.call(b,this)},this)},generateChangeStamp:function(){var a=this.modifiedGenerator.generateChangeStamp();this.modifiedCSV.addCS(a);this.generatorChanged=true;this.csvChanged=true;return a},create:function(a){this.addToCache(a);this.addToList(this.toCreate,a)},readByOid:function(c,d,b){var a=this.cache[c];if(a){d.call(b,a)}else{this.store.readByOid(c,function(e){if(e){this.addToCache(e)}d.call(b,e)},this)}},readCacheByOid:function(c,d,b){var a=this.cache[c];d.call(b,a)},readByOids:function(a,h,j){var c=[];var g=[];var e,d=a.length;for(e=0;e<d;e++){var b=a[e];var f=this.cache[b];if(f){c.push(f)}else{g.push(b)}}this.store.readByOids(g,function(i){this.addToCache(i);c=c.concat(i);h.call(j,c)},this)},update:function(a){this.addToCache(a);this.addToList(this.toUpdate,a)},destroy:function(a){this.toDestroy.push(a)},updateCS:function(c,b,a){if(c&&b){if(!c.equals(b)){this.csvChanged=this.modifiedCSV.addX(b)||this.csvChanged;this.csivChanged=true;this.csiv.add(b,a)}}else{if(c){}else{if(b){this.csvChanged=this.modifiedCSV.addX(b)||this.csvChanged;this.csivChanged=true;this.csiv.add(b,a)}}}},updateCSV:function(a){this.csvChanged=this.modifiedCSV.addX(a)||this.csvChanged},updateReplicaIds:function(a){this.csvChanged=this.modifiedCSV.addReplicaIds(a)||this.csvChanged},updateGenerator:function(a){this.generatorChanged=this.originalGenerator.seenCSV(a)},commit:function(d,c){this.toCreate=Ext.Array.unique(this.toCreate);this.toUpdate=Ext.Array.unique(this.toUpdate);this.toUpdate=Ext.Array.difference(this.toUpdate,this.toCreate);var b=this.getRecordsForList(this.toCreate);var a=this.getRecordsForList(this.toUpdate);this.store.create(b,function(){this.store.update(a,function(){this.store.destroy(this.toDestroy,function(){this.store.setCSIndex(this.csivChanged?this.csiv:undefined,function(){this.writeConfig_CSV(function(){this.writeConfig_Generator(function(){d.call(c,b,a)},this)},this)},this)},this)},this)},this)},writeConfig_Generator:function(b,a){if(this.generatorChanged){this.originalGenerator.set(this.modifiedGenerator);this.proxy.writeConfig_Generator(b,a)}else{b.call(a)}},writeConfig_CSV:function(b,a){if(this.csvChanged){this.originalCSV.addCSV(this.modifiedCSV);this.generatorChanged=this.originalGenerator.seenCSV(this.originalCSV);this.proxy.writeConfig_CSV(b,a)}else{b.call(a)}},addToCache:function(c){if(c){if(Ext.isArray(c)){var b=c.length;for(var d=0;d<b;d++){var a=c[d];this.addToCache(a)}}else{var e=c.getOid();if(e!==undefined){this.cache[e]=c}else{Ext.cf.util.Logger.error("Transaction.addToCache: Tried to add a record without an oid.",c)}}}},addToList:function(f,c){if(c){if(Ext.isArray(c)){var b=c.length;for(var d=0;d<b;d++){var a=c[d];var e=a.getOid();f.push(e)}}else{f.push(c.getOid())}}},getRecordsForList:function(d){var b=[];var a=d.length;for(var c=0;c<a;c++){var e=d[c];b.push(this.cache[e])}return b}});Ext.define("Ext.io.Errors",{statics:{SERVICE_VERSION_UNKNOWN:{code:"SERVICE_VERSION_UNKNOWN",message:"The SDK doesn't know which version of the service is to be used",kind:"sio",suggest:"If the service name is not misspelt, contact support@sencha.io"},NETWORK_ERROR:{code:"NETWORK_ERROR",message:"The request could not be made due to the network being down",suggest:"Check network connectivity from your device"},WEBSOCKET_NOT_READY:{code:"WEBSOCKET_NOT_READY",message:"The request could not be made as the websocket is not ready yet",suggest:"The websocket should connect automatically within some time"},UNKNOWN_ERROR:{code:"UNKNOWN_ERROR",message:"Unknown error",kind:"sio",suggest:"Contact support@sencha.io with a description of what caused the error"},UNKNOWN_RPC_ERROR:{code:"UNKNOWN_RPC_ERROR",message:"Unknown RPC error",kind:"sio",suggest:"Fix the RPC service to return a valid error object"},PARAM_MISSING:{code:"PARAM_MISSING",message:"Mandatory parameter ':name' is missing",kind:"developer",suggest:"Provide the required parameter during the method call"},PARAMS_LENGTH_MISMATCH:{code:"PARAMS_LENGTH_MISMATCH",message:"The method was passed :actual params instead of the expected :expected",kind:"developer",suggest:"Check the number of parameters you are passing to the method"},PARAM_TYPE_MISMATCH:{code:"PARAM_TYPE_MISMATCH",message:"Parameter ':name' data type mismatch. Expected ':expected', actual ':actual'",kind:"developer",suggest:"Correct the data type of the parameter"},RPC_PARAM_FUNCTION_ERROR:{code:"RPC_PARAM_FUNCTION_ERROR",message:"Parameter number :index (:name) is a function, but only the first parameter must be a function",kind:"developer",suggest:"Ensure that only the first parameter is a function"},RPC_TIMEOUT:{code:"RPC_TIMEOUT",message:"RPC request has timed out as there was no reply from the server",kind:"developer",suggest:"Check if this was caused by network connectivity issues. If not, the service might be down. Also, see documentation for Ext.Io.setup (rpcTimeoutDuration, rpcTimeoutCheckInterval) to configure the timeout check"},AUTH_REQUIRED:{code:"AUTH_REQUIRED",message:"This request requires an authenticated :kind session",kind:"developer",suggest:"Retry the request with a valid session"},CHANNEL_NAME_MISSING:{code:"CHANNEL_NAME_MISSING",message:"Channel name is missing",kind:"developer",suggest:"Provide the channel name"},CHANNEL_APP_ID_MISSING:{code:"CHANNEL_APP_ID_MISSING",message:"Channel appId is missing",kind:"sio",suggest:"Potential bug in the SIO SDK, attempting to get a channel without an appId"},SERVICE_NAME_MISSING:{code:"SERVICE_NAME_MISSING",message:"Service name is missing",kind:"developer",suggest:"Provide the service name"},SERVICE_DESCRIPTOR_LOAD_ERROR:{code:"SERVICE_DESCRIPTOR_LOAD_ERROR",message:"Error loading service descriptor from the server",kind:"developer",suggest:"Service name is most likely misspelt. If not, contact support@sencha.io"},MESSAGE_NOT_JSON:{code:"MESSAGE_NOT_JSON",message:"message is not a JSON object",kind:"developer",suggest:"Use a valid JSON object instead of basic data types"},NO_APP_ID:{code:"NO_APP_ID",message:"App ID not found",kind:"developer",suggest:"Use a valid App ID"},FILE_PARAMS_MISSING:{code:"FILE_PARAMS_MISSING",message:"File or data parameters are missing",kind:"developer",suggest:"File or data parameters are missing"},DEVELOPER_NOT_LOGGED_IN:{code:"DEVELOPER_NOT_LOGGED_IN",message:"Developer is not logged in",kind:"developer",suggest:"Retry the request after Developer login"},NO_DEVICE_ID:{code:"NO_DEVICE_ID",message:"Device ID not found",kind:"sio",suggest:"Might be a bug in device allocation"},NO_CURRENT_USER:{code:"NO_CURRENT_USER",message:"User ID not found",kind:"developer",suggest:"Retry with a valid User ID"},USER_NOT_AUTHENTICATED:{code:"USER_NOT_AUTHENTICATED",message:"User not authenticated",kind:"developer",suggest:"Retry the request after User login"},PIC_OP_NOT_SUPPORTED:{code:"PIC_OP_NOT_SUPPORTED",message:"This class of object does not support picture operations",kind:"developer",suggest:"This class of object does not support picture operations"},PUSH_NOTIFICATIONS_NOT_SUPPORTED:{code:"PUSH_NOTIFICATIONS_NOT_SUPPORTED",message:"Push Notifications are not supported in this execution environment",kind:"developer",suggest:"Try building this application as a Packaged ST2 + SIO iOS Application"},UNABLE_READ_FILE:{code:"UNABLE_READ_FILE",message:"Unable to read selected file",kind:"developer",suggest:"File is not provided or your browser does not support this operation"}}});Ext.define("Ext.cf.util.ErrorHelper",{requires:["Ext.cf.util.Logger","Ext.io.Errors"],statics:{isValidError:function(a){if(typeof(a)==="object"&&a!==null&&typeof(a.code)==="string"&&typeof(a.message)==="string"){return true}return false},get:function(d,b,e){var c=Ext.clone(Ext.io.Errors[d]?Ext.io.Errors[d]:Ext.io.Errors.UNKNOWN_ERROR);if(b){c.details=b}for(var a in e){if(e.hasOwnProperty(a)){c.message=c.message.replace(":"+a,e[a])}}return c},getUnknownError:function(b){var a=this.get("UNKNOWN_ERROR");a.details=b;return a},decode:function(a){if(a===null||a==="null"||a===""){return null}if(this.isValidError(a)){return a}try{a=Ext.decode(a);if(this.isValidError(a)){return a}else{Ext.cf.util.Logger.debug("Could not decode error:",a);return this.getUnknownError(a)}}catch(b){Ext.cf.util.Logger.debug("Could not decode error:",a);return this.getUnknownError(a)}}}});Ext.define("Ext.cf.util.ParamValidator",{requires:["Ext.cf.util.ErrorHelper","Ext.cf.util.Logger"],statics:{getType:function(a){var b=typeof(a);if(b!=="object"){return b}else{if(a===null){return"null"}if(Object.prototype.toString.call(a)==="[object Array]"){return"array"}return"object"}},validateParam:function(c,j,n,h,g){var p=this.getType(j);if(h&&(p==="function"&&n!==0)){return Ext.cf.util.ErrorHelper.get("RPC_PARAM_FUNCTION_ERROR",null,{name:c.name,index:n+1})}else{var m=c.type.split("|");var b=false;for(var f=0;f<m.length;f++){if((m[f]===p)||(c.optional&&p==="undefined")){b=true;break}}if(!b){return Ext.cf.util.ErrorHelper.get("PARAM_TYPE_MISMATCH",null,{name:(g?(g+"."):"")+c.name,expected:c.type,actual:p})}if(p==="object"&&c.hasOwnProperty("keys")){for(var e=0;e<c.keys.length;e++){var a=c.keys[e];var l=j[a.name];var o=this.getType(l);if(o==="undefined"&&!a.optional){return Ext.cf.util.ErrorHelper.get("PARAM_MISSING",null,{name:(g?(g+"."):"")+c.name+"."+a.name})}var d=this.validateParam(a,l,e,false,(g?(g+"."):"")+c.name);if(d){return d}}}}return null},getMandatoryParamsLength:function(c){var b=0;for(var a=0;a<c.length;a++){if(!c[a].optional){b++}}return b},validateParams:function(f,c,b){if(f.length!==c.length){var d=this.getMandatoryParamsLength(f);if(c.length<=f.length&&c.length>=d){}else{return Ext.cf.util.ErrorHelper.get("PARAMS_LENGTH_MISMATCH",null,{expected:f.length,actual:c.length})}}var a,e;for(a=0;a<f.length;a++){e=this.validateParam(f[a],c[a],a,b);if(e){return e}}return null},getApiSignature:function(d,b,e){var a=d+"#"+b+"(";for(var c=0;c<e.length;c++){a+=e[c].name;if(c!==e.length-1){a+=", "}}a+=")";return a},validateApi:function(f,b,c,a){var d=this.validateParams(f,b,false);if(d){var e=d.code+" "+d.message;if(c&&a){e+=". Expected signature "+this.getApiSignature(c,a,f);e+=". Also see http://docs.sencha.io/"+Ext.getVersion("sio").toString()+"/index.html#!/api/"+c+"-method-"+a}Ext.cf.util.Logger.error(e,d);throw e}return true},validateCallbackScope:function(b,c,a){return Ext.cf.util.ParamValidator.validateApi([{name:"callback",type:"function"},{name:"scope",type:"null|object|function",optional:true}],b,c,a)},validateOptionsCallbackScope:function(e,c,d,a){var b={name:"options",type:"object"};if(e){b.keys=e}return Ext.cf.util.ParamValidator.validateApi([b,{name:"callback",type:"function"},{name:"scope",type:"null|object|function",optional:true}],c,d,a)}}});Ext.define("Ext.io.Proxy",{requires:["Ext.cf.util.ParamValidator","Ext.cf.util.ErrorHelper"],config:{name:null,descriptor:null,rpc:null},constructor:function(a){if(a.descriptor.kind!="rpc"){Ext.cf.util.Logger.error(a.name+" is not a RPC service");throw"Error, proxy does not support non-RPC calls"}this.initConfig(a);this._createMethodProxies();return this},_createMethodProxies:function(){var d=this.getDescriptor();var b=(Object.prototype.toString.call(d.methods)==="[object Array]");var a;if(b){for(var c=0;c<d.methods.length;c++){a=d.methods[c];this[a]=this._createMethodProxy(a)}}else{for(a in d.methods){this[a]=this._createMethodProxyNew(a,d.methods[a])}}},_createMethodProxyNew:function(c,d){var b=this;var a=d.shift();return function(){var g=Ext.cf.util.ParamValidator.validateParams(d,arguments,true);if(g){b.handleValidationError(g,"Invalid parameters to RPC method",c,arguments)}else{g=b.performAuthChecks(a);if(g){b.handleValidationError(g,"Authentication checks failed",c,arguments)}else{var h=b.getDescriptor();var e=Array.prototype.slice.call(arguments,0);var f=h.style[0];if(h.style.indexOf("subscriber")>0){f="subscriber"}b.getRpc().call(e[0],b.getName(),f,c,e.slice(1))}}}},handleValidationError:function(c,d,a,b){Ext.cf.util.Logger.error(d,this.config.name+"."+a,c);if(typeof(b[0])==="function"){b[0].call(null,{status:"error",error:c})}else{throw (c.code+" "+c.message)}},performAuthChecks:function(a){var d=null;var b=Ext.io.Io.getIdStore();var c={developerSid:b.getSid("developer"),userSid:b.getSid("user")};var e=this.getDescriptor();d=this.validateAuthentication(e.authenticate,c);if(!d){d=this.validateAuthentication(a.authenticate,c)}return d},validateAuthentication:function(a,b){var c=null;if(a){if((a==="developer"&&!b.developerSid)||(a==="user"&&!b.userSid)){c=Ext.cf.util.ErrorHelper.get("AUTH_REQUIRED",null,{kind:a})}}return c},_createMethodProxy:function(b){var a=this;return function(){var e=a.getDescriptor();var c=Array.prototype.slice.call(arguments,0);var d=e.style[0];if(e.style.indexOf("subscriber")>0){d="subscriber"}a.getRpc().call(c[0],a.getName(),d,b,c.slice(1))}}});Ext.define("Ext.cf.data.Protocol",{requires:["Ext.cf.data.Updates","Ext.cf.data.Transaction","Ext.cf.ds.CSV","Ext.cf.data.Updates","Ext.io.Proxy"],config:{proxy:undefined,owner:"user",access:"private",version:2,userId:undefined,groupId:undefined,deviceId:undefined},constructor:function(a){this.logger=Ext.cf.util.Logger;this.initConfig(a)},sync:function(f,c){var a=this;var b=this.getProxy();a.logger.debug("Protocol.sync: start");var e=b.getDatabaseDefinition();if(!e.hasOwner()){this.mapOwnerToId(this.getOwner(),this.getAccess(),e)}var d=b.getReplicaDefinition();if(!d.getDeviceId()){d.setDeviceId(this.config.deviceId||Ext.io.Io.getIdStore().getId("device"))}this.sendGetUpdate({},function(g){a.logger.debug("Protocol.sync: end",g);f.call(c,g)})},mapOwnerToId:function(b,a,c){if(!b||b==="user"){if(!a||a==="private"){c.setUserId(this.config.userId||Ext.io.Io.getIdStore().getId("user"))}else{if(a==="public"){c.setGroupId(this.config.groupId||Ext.io.Io.getIdStore().getId("group"))}else{this.logger.error("Ext.cf.data.Protocol: Unknown owner:",b)}}}else{this.logger.error("Ext.cf.data.Protocol: Unknown access:",a)}},sendGetUpdate:function(b,c){this.logger.debug("Protocol.sendGetUpdate");var a=this;Ext.io.Io.getService({name:"SyncRpcService"},function(d,g){if(d){var e=this.getProxy();var f={dd:e.getDatabaseDefinition().getCurrentConfig(),rd:e.getReplicaDefinition().getCurrentConfig(),csv:e.csv.encode()};d.getUpdates(function(h){if(!h.r){h=h.value}a.receiveResponse(h,b,function(i){if(h.r==="ok"){var k=Ext.create("Ext.cf.ds.CSV").decode(h.updates_csv);var j=Ext.create("Ext.cf.ds.CSV").decode(h.required_csv);a.updateLocalState(a.getProxy(),k,function(){var l=Ext.create("Ext.cf.data.Updates").decode(h.updates);i.received=l.length();a.getProxy().putUpdates(l,k,function(m){a.sendPutUpdate(j,m,c)},this)},this)}else{c(i)}})},f)}else{c(g)}},this)},receiveResponse:function(a,c,e){this.logger.debug("Protocol.receiveResponse",a);var b=this.getProxy();switch(a.r||a.value.r){case"ok":e(a);break;case"set_replica_id":case"new_replica_id":if(c.new_replica_id==a.replicaId){this.logger.error("Protocol.receiveResponse: The server returned the same replica id '",a,"'");e.call({r:"error_same_replica_id"})}else{c.new_replica_id=a.replicaId;this.logger.info("Protocol.receiveResponse: Change local replica id to",a.replicaId);b.setReplicaId(a.replicaId,function(){this.sendGetUpdate(c,e)},this)}break;case"new_generation_version":var d=b.getDatabaseDefinition().getGeneration();if(new Ext.Version(d).isLessThan(a.generation)){c.new_generation_version=a.generation;b.getDatabaseDefinition().setGeneration(a.generation);b.reset(function(){this.sendGetUpdate(c,e)},this)}else{this.logger.error("Protocol.receiveResponse: The server returned the same generation version '",a,"'")}break;case"error":this.logger.error("Protocol.receiveResponse: The server returned the error '",a.error,"'");e(a);break;default:this.logger.error("Protocol.receiveResponse: Received unknown message:",a);e(a)}},sendPutUpdate:function(c,b,e){this.logger.debug("Protocol.sendPutUpdate",c);var a=this.getProxy();b.sent=0;b.r="ok";if(!c.isEmpty()){var d=Ext.create("Ext.cf.ds.CSV",a.csv);d.setCSV(c);a.getUpdates(d,function(g,f){if((g&&!g.isEmpty())||(f&&!f.isEmpty())){Ext.io.Io.getService({name:"SyncRpcService"},function(h,j){if(h){b.sent=g.length();var i={dd:a.getDatabaseDefinition().getCurrentConfig(),rd:a.getReplicaDefinition().getCurrentConfig(),csv:a.csv.encode(),updates:JSON.stringify(g.encode())};h.putUpdates(function(k){Ext.apply(b,k);e(b)},i)}else{e(j)}},this)}else{this.logger.debug("Protocol.sendPutUpdate: no work");e(b)}},this)}else{this.logger.debug("Protocol.sendPutUpdate: no work");e(b)}},updateLocalState:function(b,a,d,c){Ext.create("Ext.cf.data.Transaction",b,function(e){e.updateReplicaIds(a);e.updateGenerator(a);e.commit(d,c)},this)}});Ext.define("Ext.cf.data.ReplicaDefinition",{requires:["Ext.cf.Utilities"],config:{deviceId:undefined,replicaId:undefined},constructor:function(a){var b=Ext.cf.util.ParamValidator.validateApi([{name:"config",type:"object",keys:[{name:"replicaId",type:"string"}]}],arguments,"ReplicaDefinition","constructor");this.initConfig(a)},changeReplicaId:function(a){var b=(this.getReplicaId()!=a);this.setReplicaId(a);return b},as_data:function(){return{deviceId:this.getDeviceId(),replicaId:this.getReplicaId()}}});Ext.define("Ext.cf.data.SyncModel",{statics:{areDecorated:function(a){return Ext.Array.every(a,function(b){return(b.eco!==undefined&&b.eco!==null)})},isDestroyed:function(b){var a=(b||this).data._ts;return(a!==null&&a!==undefined&&a!=="")},isNotDestroyed:function(b){var a=(b||this).data._ts;return(a===null||a===undefined||a==="")}}});Ext.define("Ext.cf.ds.ECO",{requires:["Ext.cf.ds.CSV","Ext.cf.ds.CS"],constructor:function(a){a=a||{};this.oid=a.oid;this.data=a.data||{};this.state=a.state||{}},setOid:function(a){this.oid=a},getOid:function(){return this.oid},getState:function(){return this.state},get:function(a){return this.getValue(a)},set:function(f,d,c){var e=this.valueToUpdates(f,d);var a=e.length;for(var b=0;b<a;b++){var g=e[b];this.setValueCS(c,g.n,g.v,c.generateChangeStamp())}},applyUpdate:function(a,b){return this.setValueCS(a,b.p,b.v,b.c)},getUpdates:function(a){var b=[];this.forEachValueCS(function(f,c,e){if(e){var d=a.get(e);if(!d||d.lessThan(e)){b.push({i:this.getOid(),p:f.length==1?f[0]:f,v:c.length==1?c[0]:c,c:e})}}},this);return b},getCSV:function(){var a=Ext.create("Ext.cf.ds.CSV");this.forEachCS(function(b){a.addCS(b)},this);return a},getAllCS:function(){var a=[];this.forEachCS(function(b){a.push(new Ext.cf.ds.CS(b))},this);return a},changeReplicaId:function(c,b,a){var e=false;this.forEachCS(function(h){var g=h.changeReplicaId(b,a);e=e||g;return h},this);if(this.oid){var f=Ext.create("Ext.cf.ds.CS",this.oid);if(f.changeReplicaId(b,a)){var d=f.asString();this.data[c]=d;this.oid=f.asString();e=true}}return e},forEachValueCS:function(j,k,e,a,m,h){e=e||this.data;a=a||this.state;m=m||[];h=h||[];for(var b in a){if(a.hasOwnProperty(b)){var c=a[b];var f=e[b];var d=m.concat(b);var i=this.valueType(f);var g;switch(i){case"object":switch(f){case undefined:g=undefined;break;case null:g=null;break;default:g={};break}break;case"array":g=[[]];break;default:g=f}var l=h.concat(g);switch(this.valueType(c)){case"string":j.call(k,d,l,new Ext.cf.ds.CS(c));break;case"array":switch(i){case"undefined":Ext.cf.util.Logger.warn("ECO.forEachValueCS: There was no data for the state at path",d);Ext.cf.util.Logger.warn("ECO.forEachValueCS: ",this.data);break;case"object":case"array":j.call(k,d,l,new Ext.cf.ds.CS(c[0]));this.forEachValueCS(j,k,f,c[1],d,l);break;default:j.call(k,d,l,new Ext.cf.ds.CS(c[0]));break}break}}}},forEachValue:function(g,b,c,e){c=c||this.data;e=e||[];var f,a;for(f in c){if(c.hasOwnProperty(f)){a=c[f];if(a!==this.state){var d=e.concat(f);g.call(b,d,a);if(this.isComplexValueType(a)){this.forEachValue(g,b,a,d)}}}}},forEachCS:function(f,c,d){d=d||this.state;for(var a in d){if(d.hasOwnProperty(a)){var e=d[a];var b;switch(this.valueType(e)){case"string":b=f.call(c,Ext.create("Ext.cf.ds.CS",e));if(b){d[a]=b.asString()}break;case"array":b=f.call(c,Ext.create("Ext.cf.ds.CS",e[0]));if(b){d[a][0]=b.asString()}this.forEachCS(f,c,e[1]);break}}}},getValueCS:function(h){var f=this.data;var d=this.state;if(Ext.isArray(h)){var a=h.length;var g=a-1;for(var c=0;c<a;c++){var b=h[c];if(c===g){return{v:f?f[b]:f,c:this.extractCS(d,b)}}else{d=this.extractState(d,b);f=f?f[b]:f}}}else{return{v:f[h],c:this.extractCS(d,h)}}},getValue:function(g){var d=this.data;if(Ext.isArray(g)){var a=g.length;var f=a-1;for(var c=0;c<a;c++){var b=g[c];if(c===f){return d[b]}else{d=d[b]}}}else{return this.data[g]}},setValueCS:function(m,o,a,g){var n=this;var b=function(i,y,x,e,l,B){var A=false;if(l!==undefined){y[e]=l;A=true}if(B!==undefined){var z=n.extractCS(x,e);n.assignCS(x,e,B);i.updateCS(z,B,n.getOid());A=true}return A};var f=false;if(!Ext.isArray(o)){o=[o];a=[a]}var v=this.data;var d=this.state;var p=o.length;var r=p-1;for(var q=0;q<p;q++){var w=o[q];var k=a[q];var u=this.extractCS(d,w);var c=v[w];var s=this.valueType(c);var h=this.valueType(k);var j=((s==="object"&&h==="object")||(s==="array"&&h==="array"));if(u){if(g.greaterThan(u)){if(j){k=undefined}if(b(m,v,d,w,k,g)){f=true}}else{if(j){}else{return f}}}else{if(b(m,v,d,w,k,g)){f=true}}if(q!==r){v=v[w];d=this.extractState(d,w,g)}}return f},getCS:function(g){var d=this.state;if(Ext.isArray(g)){var a=g.length;var f=a-1;for(var c=0;c<a;c++){var b=g[c];if(c===f){return this.extractCS(d,b)}else{d=this.extractState(d,b)}}}else{return this.extractCS(d,g)}},setCS:function(j,m,f){var k=this;var h=function(i,l,e,o){var n=k.extractCS(l,e);k.assignCS(l,e,o);i.updateCS(n,o,k.getOid())};var b=this.state;if(Ext.isArray(m)){var c=m.length;var g=c-1;for(var d=0;d<c;d++){var a=m[d];if(d===g){h(j,b,a,f)}else{b=this.extractState(b,a)}}}else{h(j,b,m,f)}},extractState:function(d,a,c){var e=d[a];var b;switch(this.valueType(e)){case"undefined":b={};d[a]=[c,b];d=b;break;case"string":b={};d[a]=[e,b];d=b;break;case"array":d=e[1];break}return d},extractCS:function(c,a){var b;c=c[a];if(c){switch(this.valueType(c)){case"string":b=new Ext.cf.ds.CS(c);break;case"array":b=new Ext.cf.ds.CS(c[0]);break}}return b},assignCS:function(d,b,c){var e=(c instanceof Ext.cf.ds.CS)?c.asString():c;var a=d[b];if(a){switch(this.valueType(a)){case"string":d[b]=e;break;case"array":a[0]=e;break}}else{d[b]=e}},valueType:function(b){var a=typeof b;if(a==="object"&&(b instanceof Array)){a="array"}return a},isComplexValueType:function(a){return(a!==null&&typeof a==="object")},valueToUpdates:function(a,h){if(this.isComplexValueType(h)){var e;switch(this.valueType(h)){case"object":e={};break;case"array":e=[];break}var j={n:[a],v:[e]};var g=[j];for(var k in h){if(h.hasOwnProperty(k)){var b=this.valueToUpdates(k,h[k]);var c=b.length;for(var f=0;f<c;f++){var d=b[f];g=g.concat({n:j.n.concat(d.n),v:j.v.concat(d.v)})}}}return g}else{return[{n:a,v:h}]}}});Ext.define("Ext.cf.data.Update",{statics:{asString:function(b){if(Ext.isArray(b)){return"["+Ext.Array.map(b,Ext.cf.data.Update.asString).join(", ")+"]"}else{if(b instanceof Ext.cf.data.Updates){return Ext.cf.data.Update.asString(b.updates)}else{var c=Ext.isArray(b.p)?b.p.join():b.p;var a=b.v;if(typeof b.v==="object"){a=JSON.stringify(b.v)}return"("+b.i+" . "+c+" = '"+a+"' @ "+b.c.asString()+")"}}}}});Ext.define("Ext.cf.data.SyncProxy",{extend:"Ext.data.proxy.Proxy",requires:["Ext.data.proxy.Proxy","Ext.cf.data.Transaction","Ext.cf.data.Updates","Ext.cf.data.DatabaseDefinition","Ext.cf.data.ReplicaDefinition","Ext.cf.ds.CS","Ext.cf.ds.CSV","Ext.cf.ds.ECO","Ext.cf.Utilities","Ext.cf.data.SyncModel","Ext.cf.data.Update","Ext.cf.data.ModelWrapper","Ext.cf.util.Logger"],config:{store:undefined,databaseDefinition:undefined,replicaDefinition:undefined},databaseName:undefined,csv:undefined,generator:undefined,userModel:undefined,idProperty:undefined,asyncInitialize:function(a,d,b){var c=Ext.cf.util.ParamValidator.validateApi([{name:"config",type:"object",keys:[{name:"store",type:"object"},{name:"databaseDefinition",type:"object"},{name:"replicaDefinition",type:"object"}]},{name:"callback",type:"null|function",optional:true},{name:"scope",type:"null|object|function",optional:true}],arguments,"SyncProxy","asyncInitialize");this.databaseName=a.databaseDefinition.databaseName;this.setStore(a.store);this.initConfig(a);this.setDatabaseDefinition(Ext.create("Ext.cf.data.DatabaseDefinition",a.databaseDefinition));this.setReplicaDefinition(Ext.create("Ext.cf.data.ReplicaDefinition",a.replicaDefinition));this.loadConfig(a,function(){Ext.cf.util.Logger.info("SyncProxy.asyncInitialize: Opened database '"+this.databaseName+"'");d.call(b,{r:"ok"})},this)},create:function(a,c,b){Ext.create("Ext.cf.data.Transaction",this,function(e){var d=a.getRecords();d.forEach(function(g){var h=e.generateChangeStamp();var i=h.asString();var f=g.eco=Ext.create("Ext.cf.ds.ECO",{oid:i,data:Ext.getVersion("extjs")?g.data:g.getData(),state:{}});f.setValueCS(e,"_oid",i,h);f.forEachValue(function(k,j){if(k[0]!=="_oid"){f.setCS(e,k,e.generateChangeStamp())}},f);g.data[this.idProperty]=g.getOid()},this);e.create(d);e.commit(function(){d.forEach(function(f){f.commit()},this);a.setSuccessful();a.setCompleted();this.doCallback(c,b,a)},this)},this)},read:function(a,d,c){function b(e){e=Ext.Array.filter(e,function(f){return f!==undefined&&Ext.cf.data.SyncModel.isNotDestroyed(f)},this);a.setResultSet(Ext.create("Ext.data.ResultSet",{records:e,total:e.length,loaded:true}));a.setSuccessful();a.setCompleted();this.doCallback(d,c,a)}if(a.id!==undefined){this.getStore().readByOid(a.id,function(e){b.call(this,[e])},this)}else{if(a._oid!==undefined){this.getStore().readByOid(a._oid,function(e){b.call(this,[e])},this)}else{this.getStore().readAll(function(e){b.call(this,e)},this)}}},update:function(a,c,b){if(Ext.cf.data.SyncModel.areDecorated(a.getRecords())){Ext.create("Ext.cf.data.Transaction",this,function(e){var d=a.getRecords();d.forEach(function(f){f.setUpdateState(e)},this);e.update(d);e.commit(function(){d.forEach(function(f){f.commit()},this);a.setSuccessful();a.setCompleted();this.doCallback(c,b,a)},this)},this)}else{Ext.cf.util.Logger.warn("SyncProxy.update: Tried to update a model that had not been read from the store.");this.doCallback(c,b,a)}},destroy:function(a,c,b){if(Ext.cf.data.SyncModel.areDecorated(a.getRecords())){Ext.create("Ext.cf.data.Transaction",this,function(e){var d=a.getRecords();d.forEach(function(f){f.setDestroyState(e)},this);e.update(d);e.commit(function(){d.forEach(function(f){f.commit()},this);a.setSuccessful();a.setCompleted();a.action="destroy";this.doCallback(c,b,a)},this)},this)}else{Ext.cf.util.Logger.warn("SyncProxy.destroy: Tried to destroy a model that had not been read from the store.");this.doCallback(c,b,a)}},clear:function(c,b){var a=this.getStore();a.clear(function(){a.removeConfig("databaseDefinition",function(){a.removeConfig("replicaDefinition",function(){a.removeConfig("csv",function(){a.removeConfig("generator",c,b)},this)},this)},this)},this)},reset:function(c,b){var a=this.getStore();a.clear(function(){a.removeConfig("csv",function(){this.readConfig_CSV({},c,b)},this)},this)},setModel:function(c,b){this.userModel=c;var a=Ext.getVersion("extjs");if(a){this.idProperty=c.prototype.idProperty}else{this.idProperty=c.getIdProperty()}this.getStore().setModel(this.userModel)},replicaId:function(){return this.generator.r},addReplicaIds:function(a,c,b){this.csv.addReplicaIds(a);this.writeConfig_CSV(c,b)},setReplicaId:function(a,d,c){var b=this.replicaId();Ext.cf.util.Logger.info("SyncProxy.setReplicaId: change from",b,"to",a);this.getStore().changeReplicaId(b,a,function(){this.getReplicaDefinition().changeReplicaId(a);this.csv.changeReplicaId(b,a);this.generator.setReplicaId(a);this.writeConfig_Replica(function(){this.writeConfig_Generator(function(){this.writeConfig_CSV(d,c)},this)},this)},this)},getUpdates:function(c,h,j){c.addReplicaIds(this.csv);var a=this.csv.dominant(c);if(a.dominant.length===0){var f=Ext.create("Ext.cf.ds.CSV");var e=Ext.create("Ext.cf.ds.CSV");var d,b=a.dominated.length;for(d=0;d<b;d++){e.addCS(this.csv.get(a.dominated[d]))}h.call(j,Ext.create("Ext.cf.data.Updates"),f,e)}else{if(!c.isEmpty()){Ext.cf.util.Logger.info("SyncProxy.getUpdates: Get updates from",c.asString());Ext.cf.util.Logger.info("SyncProxy.getUpdates: Dominated Replicas:",Ext.Array.pluck(a.dominated,"r").join(", "))}var g=[];this.getStore().readByCSV(c,function(m){var n,k=m.length;for(n=0;n<k;n++){g=g.concat(m[n].getUpdates(c))}var p=Ext.create("Ext.cf.ds.CSV");p.addX(a.dominant);var o=Ext.create("Ext.cf.ds.CSV");o.addX(a.dominated);h.call(j,Ext.create("Ext.cf.data.Updates",g),p,o)},this)}},putUpdates:function(b,c,d,a){Ext.create("Ext.cf.data.Transaction",this,function(g){if(b.isEmpty()){g.updateCSV(c);g.commit(function(){d.call(a,{r:"ok"})},this)}else{var f=Ext.create("Ext.cf.ds.CSV");var e=b.oids();g.readByOids(e,function(){b.forEach(function(h){this.applyUpdate(g,h,function(){},this);f.addCS(h.c)},this);this.putUpdates_done(g,b,c,f,d,a)},this)}},this)},putUpdates_done:function(b,d,e,a,f,c){b.updateCSV(a);b.updateCSV(e);b.commit(function(j,i){j=Ext.Array.filter(j,Ext.cf.data.SyncModel.isNotDestroyed);var g=Ext.Array.partition(i,Ext.cf.data.SyncModel.isDestroyed);var h=g[0];i=g[1];f.call(c,{r:"ok",created:j,updated:i,removed:h})},this)},applyUpdate:function(a,e,d,b,c){a.readCacheByOid(e.i,function(f){if(f){this.applyUpdateToRecord(a,f,e);d.call(b)}else{Ext.cf.util.Logger.debug("SyncProxy.applyUpdate:",Ext.cf.data.Update.asString(e),"accepted, creating new record");this.applyUpdateCreatingNewRecord(a,e);d.call(b)}},this)},applyUpdateCreatingNewRecord:function(b,c){var a;if(c.p==="_oid"){a=this.createModelFromOid(b,c.v,c.c)}else{Ext.cf.util.Logger.warn("Update received for unknown record "+c.i,Ext.cf.data.Update.asString(c));a=this.createModelFromOid(b,c.i,c.i);a.setValueCS(b,c.p,c.v,c.c)}b.create([a])},createModelFromOid:function(c,e,d){Ext.cf.util.Logger.info("SyncProxy.createModelFromOid:",e,d);var b=new this.userModel({});b.phantom=false;var a=b.eco=Ext.create("Ext.cf.ds.ECO",{oid:e,data:b.data,state:{}});b.setValueCS(c,"_oid",e,d);return b},applyUpdateToRecord:function(b,a,c){if(a.putUpdate(b,c)){b.update([a]);Ext.cf.util.Logger.info("SyncProxy.applyUpdateToRecord:",Ext.cf.data.Update.asString(c),"accepted");return true}else{Ext.cf.util.Logger.info("SyncProxy.applyUpdateToRecord:",Ext.cf.data.Update.asString(c),"rejected");return false}},loadConfig:function(a,c,b){this.readConfig_Database(a,function(){this.readConfig_Replica(a,function(){this.readConfig_CSV(a,function(){this.readConfig_Generator(a,function(){c.call(b)},this)},this)},this)},this)},readConfig_Database:function(a,c,b){this.readConfig(Ext.cf.data.DatabaseDefinition,"databaseDefinition",a.databaseDefinition,{},function(e,d){this.setDatabaseDefinition(d);c.call(b,e,d)},this)},readConfig_Replica:function(a,c,b){this.readConfig(Ext.cf.data.ReplicaDefinition,"replicaDefinition",a.replicaDefinition,{},function(e,d){this.setReplicaDefinition(d);c.call(b,e,d)},this)},readConfig_Generator:function(a,c,b){this.readConfig(Ext.cf.ds.LogicalClock,"generator",{},{},function(d,e){this.generator=e;if(this.generator.r===undefined){this.generator.r=a.replicaDefinition.replicaId}if(a.clock){this.generator.setClock(a.clock)}c.call(b,d,e)},this)},readConfig_CSV:function(a,c,b){this.readConfig(Ext.cf.ds.CSV,"csv",{},{},function(e,d){this.csv=d;c.call(b,e,d)},this)},writeConfig_Replica:function(b,a){this.writeConfig("replicaDefinition",this.getReplicaDefinition(),b,a)},writeConfig_Generator:function(b,a){this.writeConfig("generator",this.generator,b,a)},writeConfig_CSV:function(b,a){this.writeConfig("csv",this.csv,b,a)},writeConfig:function(d,a,c,b){if(a){this.getStore().writeConfig(d,a.as_data(),c,b)}else{c.call(b)}},readConfig:function(d,f,b,a,e,c){this.getStore().readConfig(f,function(i){var g;var h=(i===undefined)?"created":"ok";if(b!==undefined){if(i===undefined){i=b}else{for(g in b){if(i[g]===undefined){i[g]=b[g]}}}}if(a!==undefined){if(i===undefined){i=a}else{for(g in a){if(i[g]!==a[g]){i[g]=a[g]}}}}e.call(c,h,new d(i))},this)},doCallback:function(c,b,a){if(typeof c=="function"){c.call(b||this,a)}}});Ext.Array.partition=function(d,k,h){var e=[],c=[];if(d){var f,b=d.length;for(var g=0;g<b;g++){f=d[g];if(f!==undefined){if(k.call(h||f,f)){e.push(f)}else{c.push(f)}}}}return[e,c]};Ext.define("Ext.cf.ds.CSI",{map:{},v:[],dirty:false,constructor:function(){this.clear()},clear:function(){this.map={};this.v=[];this.dirty=false},add:function(b,c){var a=this.map[b];if(a){a[c]=true}else{a={};a[c]=true;this.map[b]=a;this.dirty=true}},remove:function(b,c){var a=this.map[b];if(a){delete a[c];this.dirty=true}},oidsFrom:function(c){var e=[];var d=this.keysFrom(c);var a=d.length;for(var b=0;b<a;b++){e=e.concat(this.oToA(this.map[d[b]]))}return e},keysFrom:function(d){var f=[];var e=this.keys();var a=e.length;for(var c=0;c<a;c++){var b=e[c];if(b>=d){f.push(b)}}return f},encode:function(){var b={};for(var a in this.map){if(this.map.hasOwnProperty(a)&&!this.isEmpty(this.map[a])){b[a]=this.oToA(this.map[a])}}return b},decode:function(b){this.clear();for(var d in b){if(b.hasOwnProperty(d)){var a=b[d];for(var c=0;c<a.length;c++){this.add(d,a[c])}}}return this},keys:function(){if(this.dirty){this.v=[];for(var a in this.map){if(this.map.hasOwnProperty(a)&&!this.isEmpty(this.map[a])){this.v.push(a)}}this.dirty=false}return this.v},isEmpty:function(b){for(var a in b){return false}return true},oToA:function(c){var b=[];if(c){for(var a in c){if(c.hasOwnProperty(a)){b.push(a)}}}return b},asString:function(){var b="";for(var a in this.map){if(this.map.hasOwnProperty(a)&&!this.isEmpty(this.map[a])){b=b+a+":"+this.oToA(this.map[a])}b=b+", "}return b}});Ext.define("Ext.cf.ds.CSIV",{requires:["Ext.cf.ds.CSI"],v:{},constructor:function(){this.v={}},oidsFrom:function(a){var b=a.collect(function(d){var c=this.v[d.r];if(c){return c.oidsFrom(d.t)}},this);b=Ext.Array.flatten(b);b=Ext.Array.unique(b);b=Ext.Array.clean(b);return b},add:function(b,c){var a=this.v[b.r];if(a===undefined){a=this.v[b.r]=Ext.create("Ext.cf.ds.CSI")}a.add(b.t,c)},addArray:function(c,f){var b=c.length;for(var d=0;d<b;d++){var e=c[d];if(e){this.add(c[d],f)}}},remove:function(b,c){var a=this.v[b.r];if(a){a.remove(b.t,c)}},removeArray:function(c,f){var b=c.length;for(var d=0;d<b;d++){var e=c[d];if(e){this.remove(c[d],f)}}},encode:function(){var b={};for(var a in this.v){if(this.v.hasOwnProperty(a)){b[a]=this.v[a].encode()}}return{r:b}},decode:function(a){this.v={};if(a){for(var b in a.r){if(a.r.hasOwnProperty(b)){this.v[b]=Ext.create("Ext.cf.ds.CSI").decode(a.r[b])}}}return this},asString:function(){var b="";for(var a in this.v){if(this.v.hasOwnProperty(a)){b=b+a+"=>["+this.v[a].asString()+"], "}}return b}});Ext.define("Ext.cf.data.SyncStore",{requires:["Ext.cf.Utilities","Ext.cf.ds.CSIV"],asyncInitialize:function(a,e,b){var d=Ext.cf.util.ParamValidator.validateApi([{name:"config",type:"object",keys:[{name:"databaseName",type:"string"}]},{name:"callback",type:"null|function",optional:true},{name:"scope",type:"null|object|function",optional:true}],arguments,"SyncStore","initialize");this.logger=Ext.cf.util.Logger;this.store=a.localStorageProxy||window.localStorage;this.id=a.databaseName;var c=this.getIds().length>0;this.readConfig("databaseDefinition",function(f){if(c&&!f){this.logger.error("Ext.cf.data.SyncStore.initialize: Tried to use an existing store,",a.databaseName,", as a syncstore.");e.call(b,{r:"error"})}else{this.readConfig("csiv",function(g){this.csiv=g?Ext.create("Ext.cf.ds.CSIV").decode(g):undefined;if(!this.csiv){this.reindex(function(){e.call(b,{r:"ok"})},this)}else{e.call(b,{r:"ok"})}},this)}},this)},create:function(a,d,c){var b=this.getIds();a.forEach(function(e){b.push(e.getOid());this.setRecord(e)},this);this.setIds(b);if(d){d.call(c)}},readByOid:function(c,d,b){var a=this.getRecord(c);d.call(b,a)},readByOids:function(c,h,e){var b=[];var d,a=c.length;var g=function(f){b.push(f)};for(d=0;d<a;d++){this.readByOid(c[d],g,this)}h.call(e,b)},readByCSV:function(a,d,c){var b=this.csiv.oidsFrom(a);this.readByOids(b,d,c)},readAll:function(b,a){this.readByOids(this.getIds(),b,a)},update:function(a,c,b){a.forEach(function(d){this.setRecord(d)},this);if(c){c.call(b)}},destroy:function(f,h,e){if(Ext.isArray(f)){var d=this.getIds();var c,a=f.length;for(c=0;c<a;c++){var g=f[c];Ext.Array.remove(d,g);var b=this.getRecordKey(g);this.store.removeItem(b)}this.setIds(d);if(h){h.call(e)}}else{this.destroy([f],h,e)}},clear:function(f,e){var d=this.getIds(),a=d.length,c;for(c=0;c<a;c++){var b=this.getRecordKey(d[c]);this.store.removeItem(b)}this.store.removeItem(this.id);this.store.removeItem(this.getRecordKey("csiv"));this.csiv=Ext.create("Ext.cf.ds.CSIV");f.call(e)},setModel:function(a){this.model=a},readConfig:function(c,e,a){var b=this.store.getItem(this.getRecordKey(c));var d=b?Ext.decode(b):{};e.call(a,d)},writeConfig:function(b,c,d,a){this.store.setItem(this.getRecordKey(b),JSON.stringify(c));d.call(a,c)},removeConfig:function(b,c,a){this.store.removeItem(this.getRecordKey(b));c.call(a)},getCSIndex:function(b,a){b.call(a,this.csiv)},setCSIndex:function(b,c,a){if(b){this.csiv=b;this.writeConfig("csiv",this.csiv.encode(),c,a)}else{c.call(a)}},changeReplicaId:function(b,a,d,c){this.readAll(function(g){var h,f=g.length;for(h=0;h<f;h++){var e=g[h];var j=e.getOid();if(e.changeReplicaId(b,a)){if(e.getOid()!=j){e.phantom=false;this.create([e]);this.destroy(j)}else{this.update([e])}}}this.reindex(d,c)},this)},reindex:function(b,a){this.csiv=Ext.create("Ext.cf.ds.CSIV");this.readAll(function(e){var f,d=e.length;for(f=0;f<d;f++){var c=e[f];var g=c.getOid();c.eco.forEachCS(function(h){this.csiv.add(h,g)},this)}b.call(a)},this)},getIds:function(){var a=[];var b=this.store.getItem(this.id);if(b){a=b.split(",")}return a},setIds:function(a){this.store.removeItem(this.id);this.store.setItem(this.id,a.join(","))},getRecordKey:function(a){return Ext.String.format("{0}-{1}",this.id,a)},getRecord:function(b){var g;var l=this.getRecordKey(b);var n=this.store.getItem(l);if(n!==null){var k=Ext.decode(n);var m=k.data;var f={};var h=this.model.getFields().items;var c=h.length;var e=0,j,a,d;for(e=0;e<c;e++){j=h[e];a=j.getName();if(typeof j.getDecode()=="function"){f[a]=j.getDecode()(m[a])}else{if(j.getType().type=="date"){f[a]=new Date(m[a])}else{f[a]=m[a]}}}g=new this.model(f);g.data._oid=m._oid;if(m._ref!==null&&m._ref!==undefined){g.data._ref=m._ref}if(m._ts!==null&&m._ts!==undefined){g.data._ts=m._ts}g.eco=Ext.create("Ext.cf.ds.ECO",{oid:m._oid,data:g.data,state:k.state})}return g},setRecord:function(g){var m=g.eco.data,e={},h=this.model.getFields().items,b=h.length,f=0,k,a,d,l;for(;f<b;f++){k=h[f];a=k.getName();if(typeof k.getEncode()=="function"){e[a]=k.getEncode()(m[a],g)}else{if(k.getType().type=="date"){e[a]=m[a].getTime()}else{e[a]=m[a]}}if(e[a]===null||e[a]===undefined){e[a]=k.getDefaultValue()}}e._oid=g.getOid();if(m._ref!==null&&m._ref!==undefined){e._ref=m._ref}if(m._ts!==null&&m._ts!==undefined){e._ts=m._ts}var j=g.eco;var c=g.getOid();l=this.getRecordKey(c);this.store.removeItem(l);var n=JSON.stringify({data:e,state:j.state});this.store.setItem(l,n)}});Ext.define("Ext.cf.fs.FilesClient",{requires:["Ext.cf.util.ErrorHelper"],statics:{_readFile:function(b,g,c){try{var a=new FileReader();a.onload=function(e){g.call(c,e.target.result)};a.readAsDataURL(b)}catch(f){var d=Ext.cf.util.ErrorHelper.get("UNABLE_READ_FILE");g.call(c,undefined,d)}},_createFileObject:function(b){var a={path:b.data.path,name:b.data.name,folder:(b.data.dir)?b.data.dir:false};if(b.data.namespace){a.namespace=b.data.namespace}return a},create:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"FileService"},function(f,h){if(f){var e=this;var g=function(i){f.create(function(j){if(j.status=="success"){var k=e._createFileObject(j.value);c.call(b,k)}else{c.call(b,undefined,j.error)}},a.namespace,a.path,a.name,a.folder,i)};if(a.content){g(a.content)}else{if(!a.folder&&a.file){e._readFile(a.file,function(j,i){if(!i){g(j)}else{c.call(b,undefined,i)}},b)}else{g(null)}}}else{c.call(b,undefined,h)}},this)},this)},read:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"FileService"},function(f,g){if(f){var e=this;f.read(function(h){if(h.status=="success"){c.call(b,h.value)}else{c.call(b,undefined,h.error)}},a.namespace,a.path,a.name)}else{c.call(b,undefined,g)}},this)},this)},write:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"FileService"},function(f,g){if(f){var e=this;e._readFile(a.file,function(i,h){if(!h){f.write(function(j){if(j.status=="success"){c.call(b)}else{c.call(b,undefined,j.error)}},a.namespace,a.path,a.name,i)}else{c.call(b,undefined,h)}},b)}else{c.call(b,undefined,g)}},this)},this)},remove:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"FileService"},function(f,g){if(f){var e=this;f.remove(function(h){if(h.status=="success"){c.call(b)}else{c.call(b,undefined,h.error)}},a.namespace,a.path,a.name)}else{c.call(b,undefined,g)}},this)},this)},list:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"FileService"},function(f,g){if(f){var e=this;f.list(function(h){if(h.status=="success"){var k=[];for(var j=0;j<h.value.length;j++){k.push(e._createFileObject(h.value[j]))}c.call(b,k)}else{c.call(b,undefined,h.error)}},a.namespace,a.path)}else{c.call(b,undefined,g)}},this)},this)},share:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"FileService"},function(f,g){if(f){var e=this;f.share(function(h){if(h.status=="success"){c.call(b)}else{c.call(b,undefined,h.error)}},a.namespace,a.path,a.name,a.klass,a.id,a.actions)}else{c.call(b,undefined,g)}},this)},this)},rename:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"FileService"},function(f,g){if(f){var e=this;f.rename(function(h){if(h.status=="success"){c.call(b)}else{c.call(b,undefined,h.error)}},a.namespace,a.path,a.name,a.new_name)}else{c.call(b,undefined,g)}},this)},this)},getFileInfo:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"FileService"},function(f,g){if(f){var e=this;f.getFileInfo(function(h){if(h.status=="success"){c.call(b,h.value)}else{c.call(b,undefined,h.error)}},a.namespace,a.path,a.name)}else{c.call(b,undefined,g)}},this)},this)}}});Ext.define("Ext.cf.util.UuidGenerator",{statics:{generate:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(d){var b=Math.random()*16|0,a=d=="x"?b:(b&3|8);return a.toString(16)})}}});Ext.define("Ext.cf.util.Md5",{statics:{hash:function(o,m,l,i){m=m||false;l=l||false;i=i||8;function g(p,s){var r=(p&65535)+(s&65535);var q=(p>>16)+(s>>16)+(r>>16);return(q<<16)|(r&65535)}function k(p,q){return(p<<q)|(p>>>(32-q))}function c(y,u,r,p,w,v){return g(k(g(g(u,y),g(p,v)),w),r)}function h(r,q,y,w,p,v,u){return c((q&y)|((~q)&w),r,q,p,v,u)}function b(r,q,y,w,p,v,u){return c((q&w)|(y&(~w)),r,q,p,v,u)}function j(r,q,y,w,p,v,u){return c(q^y^w,r,q,p,v,u)}function f(r,q,y,w,p,v,u){return c(y^(q|(~w)),r,q,p,v,u)}function e(A,u){A[u>>5]|=128<<((u)%32);A[(((u+64)>>>9)<<4)+14]=u;var z=1732584193;var y=-271733879;var w=-1732584194;var v=271733878;for(var r=0;r<A.length;r+=16){var t=z;var s=y;var q=w;var p=v;z=h(z,y,w,v,A[r+0],7,-680876936);v=h(v,z,y,w,A[r+1],12,-389564586);w=h(w,v,z,y,A[r+2],17,606105819);y=h(y,w,v,z,A[r+3],22,-1044525330);z=h(z,y,w,v,A[r+4],7,-176418897);v=h(v,z,y,w,A[r+5],12,1200080426);w=h(w,v,z,y,A[r+6],17,-1473231341);y=h(y,w,v,z,A[r+7],22,-45705983);z=h(z,y,w,v,A[r+8],7,1770035416);v=h(v,z,y,w,A[r+9],12,-1958414417);w=h(w,v,z,y,A[r+10],17,-42063);y=h(y,w,v,z,A[r+11],22,-1990404162);z=h(z,y,w,v,A[r+12],7,1804603682);v=h(v,z,y,w,A[r+13],12,-40341101);w=h(w,v,z,y,A[r+14],17,-1502002290);y=h(y,w,v,z,A[r+15],22,1236535329);z=b(z,y,w,v,A[r+1],5,-165796510);v=b(v,z,y,w,A[r+6],9,-1069501632);w=b(w,v,z,y,A[r+11],14,643717713);y=b(y,w,v,z,A[r+0],20,-373897302);z=b(z,y,w,v,A[r+5],5,-701558691);v=b(v,z,y,w,A[r+10],9,38016083);w=b(w,v,z,y,A[r+15],14,-660478335);y=b(y,w,v,z,A[r+4],20,-405537848);z=b(z,y,w,v,A[r+9],5,568446438);v=b(v,z,y,w,A[r+14],9,-1019803690);w=b(w,v,z,y,A[r+3],14,-187363961);y=b(y,w,v,z,A[r+8],20,1163531501);z=b(z,y,w,v,A[r+13],5,-1444681467);v=b(v,z,y,w,A[r+2],9,-51403784);w=b(w,v,z,y,A[r+7],14,1735328473);y=b(y,w,v,z,A[r+12],20,-1926607734);z=j(z,y,w,v,A[r+5],4,-378558);v=j(v,z,y,w,A[r+8],11,-2022574463);w=j(w,v,z,y,A[r+11],16,1839030562);y=j(y,w,v,z,A[r+14],23,-35309556);z=j(z,y,w,v,A[r+1],4,-1530992060);v=j(v,z,y,w,A[r+4],11,1272893353);w=j(w,v,z,y,A[r+7],16,-155497632);y=j(y,w,v,z,A[r+10],23,-1094730640);z=j(z,y,w,v,A[r+13],4,681279174);v=j(v,z,y,w,A[r+0],11,-358537222);w=j(w,v,z,y,A[r+3],16,-722521979);y=j(y,w,v,z,A[r+6],23,76029189);z=j(z,y,w,v,A[r+9],4,-640364487);v=j(v,z,y,w,A[r+12],11,-421815835);w=j(w,v,z,y,A[r+15],16,530742520);y=j(y,w,v,z,A[r+2],23,-995338651);z=f(z,y,w,v,A[r+0],6,-198630844);v=f(v,z,y,w,A[r+7],10,1126891415);w=f(w,v,z,y,A[r+14],15,-1416354905);y=f(y,w,v,z,A[r+5],21,-57434055);z=f(z,y,w,v,A[r+12],6,1700485571);v=f(v,z,y,w,A[r+3],10,-1894986606);w=f(w,v,z,y,A[r+10],15,-1051523);y=f(y,w,v,z,A[r+1],21,-2054922799);z=f(z,y,w,v,A[r+8],6,1873313359);v=f(v,z,y,w,A[r+15],10,-30611744);w=f(w,v,z,y,A[r+6],15,-1560198380);y=f(y,w,v,z,A[r+13],21,1309151649);z=f(z,y,w,v,A[r+4],6,-145523070);v=f(v,z,y,w,A[r+11],10,-1120210379);w=f(w,v,z,y,A[r+2],15,718787259);y=f(y,w,v,z,A[r+9],21,-343485551);z=g(z,t);y=g(y,s);w=g(w,q);v=g(v,p)}return[z,y,w,v]}function a(s){var r=[];var p=(1<<i)-1;for(var q=0;q<s.length*i;q+=i){r[q>>5]|=(s.charCodeAt(q/i)&p)<<(q%32)}return r}function d(r){var s="";var p=(1<<i)-1;for(var q=0;q<r.length*32;q+=i){s+=String.fromCharCode((r[q>>5]>>>(q%32))&p)}return s}function n(r){var q=l?"0123456789ABCDEF":"0123456789abcdef";var s="";for(var p=0;p<r.length*4;p++){s+=q.charAt((r[p>>2]>>((p%4)*8+4))&15)+q.charAt((r[p>>2]>>((p%4)*8))&15)}return s}return(m?d(e(a(o),o.length*i)):n(e(a(o),o.length*i)))}}});Ext.define("Ext.cf.messaging.AuthStrategies",{requires:["Ext.cf.util.UuidGenerator","Ext.cf.util.Md5"],statics:{nc:0,getRequestCounter:function(){return ++Ext.cf.messaging.AuthStrategies.nc},strategies:{senchaio:function(c,d,e,a){var b={email:d.email,password:d.password,groupId:c.getId(),provider:"senchaio"};Ext.io.Io.getMessagingProxy(function(f){f.getService({name:"GroupManager"},function(g,h){if(g){g.loginUser(function(i){if(i.status=="success"&&i.value._bucket&&i.value._bucket=="Users"){e.call(a,i.value,i.sid)}else{e.call(a,null,null,i.error)}},b)}else{e.call(a,null,null,h)}},this)},this)},facebook:function(c,d,e,b){var a=function(f){if(f.status=="success"&&f.value._bucket&&f.value._bucket=="Users"){e.call(b,f.value,f.sid)}else{e.call(b,null,null,f.error)}};d.groupId=c.getId();d.provider="facebook";Ext.io.Io.getMessagingProxy(function(f){f.getService({name:"GroupManager"},function(g,h){if(g){g.loginUser(a,d)}else{e.call(b,null,null,h)}},this)},this)},twitter:function(c,d,e,b){var a=function(f){if(f.status=="success"&&f.value._bucket&&f.value._bucket=="Users"){e.call(b,f.value,f.sid)}else{if(f.status=="authToken"){e.call(b,null,f.sid,null)}else{e.call(b,null,null,f.error)}}};d.groupId=c.getId();d.provider="twitter";Ext.io.Io.getMessagingProxy(function(f){f.getService({name:"GroupManager"},function(g,h){if(g){g.loginUser(a,d)}else{e.call(b,null,null,h)}},this)},this)}}}});Ext.define("Ext.cf.messaging.DeviceAllocator",{requires:["Ext.cf.util.Logger","Ext.cf.util.ErrorHelper"],statics:{bootup:function(g,h){g.v=Ext.getVersion("sio").toString();var d=["touch","extjs"];for(var e=0,c=false;!c&&e<d.length;e++){var b=d[e];var a=Ext.getVersion(b);if(a){g.platform=b;g.platformVersion=a.toString();c==true}}g.platformVersion;var f=Ext.getVersion("extjs");if(f){g.extVersion=f.toString()}this.callServer(g.url,"/device/bootup",g,h)},register:function(a,b,c){this.callServer(a,"/device/register",{appId:b},c)},authenticate:function(a,b,c,d){this.callServer(a,"/device/authenticate",{deviceSid:b,deviceId:c},d)},callServer:function(a,b,c,d){Ext.Ajax.request({method:"POST",url:a+b,params:{},jsonData:c,scope:this,callback:function(f,g,e){if(e&&e.status===0){d({status:"error",error:Ext.cf.util.ErrorHelper.get("NETWORK_ERROR")})}else{if(g){d(Ext.decode(e.responseText))}else{d({status:"error",error:{code:"API_ERROR",message:"Error during API call"+b+" Status "+e.status}})}}}})}}});Ext.define("Ext.cf.messaging.EnvelopeWrapper",{requires:["Ext.data.identifier.Uuid"],extend:"Ext.data.Model",config:{identifier:"uuid",fields:[{name:"e",type:"auto"},{name:"ts",type:"integer"}]}});Ext.define("Ext.cf.util.ServiceVersionHelper",{requires:["Ext.cf.ServiceDefinitions","Ext.cf.util.Logger"],statics:{get:function(b,c){var a=Ext.cf.ServiceDefinitions[b];if(!a){Ext.io.Io.getService({name:"RegistryRpcService"},function(d){d.getLatestServiceVersion(function(e){if(e.status==="success"){Ext.cf.ServiceDefinitions[b]=e.value;c(e.value)}else{var f=e.error;Ext.cf.util.Logger.error("FATAL",f);c(null);throw f.code+" "+f.message}},b)})}else{c(a)}}}});Ext.define("Ext.cf.messaging.Registry",{requires:["Ext.cf.util.ServiceVersionHelper"],alternateClassName:"Ext.io.Registry",getServiceDescriptor:function(b,c,a){Ext.cf.util.ServiceVersionHelper.get(b,function(d){if(b==="RegistryRpcService"){c.call(a,{kind:"rpc",style:["subscriber"],access:["clients","servers"],depends:["MessagingService","RegistryService"],methods:["getServiceDescriptor","getLatestServiceVersion"]})}else{var f=Ext.io.Io.getConfigStore();var e=f.getObjectConfig(b+d);if(e){c.call(a,e)}else{Ext.io.Io.getMessagingProxy(function(g){g.getService({name:"RegistryRpcService"},function(i,h){if(i){i.getServiceDescriptor(function(j){if(j.status=="success"){f.setObjectConfig(b+d,j.value);c.call(a,j.value)}else{c.call(a,undefined,j.error)}},b,d)}else{c.call(a,undefined,h)}},this)},this)}}})}});Ext.define("Ext.cf.messaging.transports.PollingTransport",{requires:["Ext.cf.util.Logger","Ext.cf.util.ErrorHelper"],mixins:{observable:"Ext.util.Observable"},statics:{isSupported:function(){return true}},config:{url:"http://api.sencha.io",maxEnvelopesPerReceive:25,started:true,reconnectBackoffInterval:5000,connected:false},backoffCounter:0,constructor:function(a){this.initConfig(a);this.mixins.observable.constructor.call(this);return this},invokeReceiver:function(){var a=this;if(a.getStarted()){var b={deviceId:a.getDeviceId(),max:a.config.maxEnvelopesPerReceive};b.deviceSid=a.getDeviceSid();a.ajaxRequest("/receive",b,{},function(d,c){a.responseHandler(d,c)})}},start:function(){var a=this;this.setStarted(true);Ext.cf.util.Logger.debug("Starting polling transport");this.invokeReceiver();return true},stop:function(){this.setStarted(false);this.setConnected(false)},responseHandler:function(e,c){var b=this;var h=0;if(e&&e.code==="NETWORK_ERROR"){b.backoffCounter++;h=b.getReconnectBackoffInterval()*b.backoffCounter}else{b.backoffCounter=0}if(h>0){Ext.cf.util.Logger.debug("polling trying reconnect in",h,"ms")}setTimeout(function(){b.invokeReceiver()},h);if(!e){Ext.cf.util.Logger.debug("PollingTransport",this.config.url,"response:",c.responseText);if(!this.getConnected()&&this.getStarted()){this.setConnected(true);this.fireEvent("connected","polling")}var f=Ext.decode(c.responseText);if(f){var a=f.envelopes;var g=f.hasMore;if(a&&a.length){for(var d=0;d<a.length;d++){this.fireEvent("receive",a[d])}}}else{Ext.cf.util.Logger.warn("PollingTransport",this.config.url,"response text is null",c.status)}}else{Ext.cf.util.Logger.warn("PollingTransport",this.config.url,"response error:",e,c);this.setConnected(false);if(e.code=="NETWORK_ERROR"){b.fireEvent("offline",e)}if(c&&c.status===403){b.fireEvent("forbidden",e)}}},send:function(b,c){var a=this;this.ajaxRequest("/send",{max:this.config.maxEnvelopesPerReceive},b,function(e,d,f){c(e,f);if(e&&e.code=="NETWORK_ERROR"){a.fireEvent("offline",e)}if(e&&d&&d.status===403){this.setConnected(false);a.fireEvent("forbidden",e)}})},subscribe:function(b,c){var a=this;b.deviceSid=a.getDeviceSid();this.ajaxRequest("/subscribe",b,{},c)},unsubscribe:function(b,c){var a=this;b.deviceSid=a.getDeviceSid();this.ajaxRequest("/unsubscribe",b,{},c)},ajaxRequest:function(c,d,b,a){Ext.Ajax.request({method:"POST",url:this.config.url+c,params:d,jsonData:b,scope:this,callback:function(f,h,e){if(a){if(e&&e.status===0){a(Ext.cf.util.ErrorHelper.get("NETWORK_ERROR"),null,true)}else{if(h){a(null,e)}else{var g=Ext.cf.util.ErrorHelper.decode(e.responseText);a(g,e,false)}}}}})},getDeviceSid:function(){return Ext.io.Io.getIdStore().getSid("device")},getDeviceId:function(){return Ext.io.Io.getIdStore().getId("device")}});Ext.define("Ext.cf.messaging.transports.WebSocketTransport",{requires:["Ext.cf.util.Logger","Ext.cf.util.ErrorHelper"],mixins:{observable:"Ext.util.Observable"},statics:{isSupported:function(){return(typeof(WebSocket)!=="undefined")}},config:{url:"https://api.sencha.io",webSocketUrl:null,reconnectBackoffInterval:5000,connectGracePeriod:500,reconnect:true,started:false},backoffCounter:0,packetCorrMap:{},messageCounter:0,constructor:function(a){this.initConfig(a);this.mixins.observable.constructor.call(this);this.deriveWebSocketUrl();return this},deriveWebSocketUrl:function(){var a=this.getUrl();var b=a.replace(/^http/,"ws");if(b[b.length-1]!=="/"){b+="/"}b+="ws";this.setWebSocketUrl(b)},start:function(){var a=this;if(this.getStarted()){Ext.cf.util.Logger.debug("WebsocketTransport already started");return}this.setReconnect(true);this.setStarted(true);if(!a.self.isSupported()){Ext.cf.util.Logger.error("WebSocket constructor not found, your browser may not support websockets");return false}Ext.cf.util.Logger.debug("websocket connecting to",this.getWebSocketUrl());this.socket=new WebSocket(this.getWebSocketUrl());this.socket.onopen=function(){a.backoffCounter=0;Ext.cf.util.Logger.debug("websocket connected");var b={deviceId:a.getDeviceId()};if(a.getDeviceSid()){b.deviceSid=a.getDeviceSid()}a._emit("start",b,function(c){if(c){Ext.cf.util.Logger.debug("websocket start error",c);if(c&&c.code==="INVALID_SID"){a.fireEvent("forbidden",c)}}else{a.fireEvent("connected","websocket")}})};this.socket.onmessage=function(b){var d;try{d=JSON.parse(b.data)}catch(c){Ext.cf.util.Logger.error("websocket got illegal packet",b.data,c);return}Ext.cf.util.Logger.debug("websocket got",d);switch(d.kind){case"data":a._receive(d.data);break;case"ack":a._handleAck(d);break;case"error":Ext.cf.util.Logger.error("websocket error",d);break;case"settings":a.processSettings(d.data);break}};this.socket.onclose=function(){Ext.cf.util.Logger.debug("websocket closed");a.setStarted(false);clearInterval(a.heartbeatTimer);a.fireEvent("offline");if(a.getReconnect()){a.backoffCounter++;var b=a.getReconnectBackoffInterval()*a.backoffCounter;Ext.cf.util.Logger.debug("websocket trying reconnect in",b,"ms");setTimeout(function(){a.start()},b)}};return true},stop:function(){var a=this;this.setReconnect(false);this.setStarted(false);clearInterval(a.heartbeatTimer);if(a.socket){this.socket.onclose=function(){};a.socket.close()}Ext.cf.util.Logger.debug("websocket stopped")},processSettings:function(b){var a=this;Ext.cf.util.Logger.debug("websocket got settings from server",b);this.heartbeatTimer=setInterval(function(){var c=new Date().getTime();a._emit("heartbeat",{time:c},function(d){if(d){Ext.cf.util.Logger.warn("websocket could not send heartbeat",c,d)}else{Ext.cf.util.Logger.debug("websocket sent heartbeat",c)}})},b.heartbeatInterval)},send:function(b,c){var a=this;a._emit("data",b,function(d,e){if(c){c(d,e)}})},subscribe:function(a,b){this._emit("subscribe",a,function(c){if(b){b(c)}})},unsubscribe:function(a,b){this._emit("unsubscribe",a,function(c){if(b){b(c)}})},isOpen:function(){return this.socket&&this.socket.readyState===1},_emit:function(c,d,g){var a=this;var b=++a.messageCounter;a.packetCorrMap[b]=g;var f={id:b,kind:c,data:d};Ext.cf.util.Logger.debug("websocket _emit",f);var e=JSON.stringify(f);if(this.isOpen()){this.socket.send(e)}else{setTimeout(function(){if(a.isOpen()){a.socket.send(e)}else{delete a.packetCorrMap[b];g(Ext.cf.util.ErrorHelper.get("WEBSOCKET_NOT_READY"),true)}},a.getConnectGracePeriod())}},_handleAck:function(c){var a=this;var d=parseInt(c.id,10);if(d&&a.packetCorrMap[d]){var b=c.data?c.data.error:undefined;a.packetCorrMap[d](b,false);delete a.packetCorrMap[d]}else{Ext.cf.util.Logger.warn("Packet",d,"not found in ack map, ignoring")}if(c.data&&c.data.error&&c.data.status===403){a.fireEvent("forbidden",c.data.error)}},_receive:function(c){if(c.envelope){this.fireEvent("receive",c.envelope)}else{if(c.envelopes&&c.envelopes.length>0){var a=c.envelopes.length;for(var b=0;b<a;b++){this.fireEvent("receive",c.envelopes[b])}}}},getDeviceSid:function(){return Ext.io.Io.getIdStore().getSid("device")},getDeviceId:function(){return Ext.io.Io.getIdStore().getId("device")}});Ext.define("Ext.cf.messaging.transports.AutoTransport",{requires:["Ext.cf.util.Logger","Ext.cf.util.ErrorHelper","Ext.cf.messaging.transports.PollingTransport","Ext.cf.messaging.transports.WebSocketTransport"],mixins:{observable:"Ext.util.Observable"},statics:{isSupported:function(){return true}},transportClasses:{polling:"Ext.cf.messaging.transports.PollingTransport",websocket:"Ext.cf.messaging.transports.WebSocketTransport"},config:{started:false},constructor:function(a){this.initConfig(a);this.mixins.observable.constructor.call(this);this.activeTransport=null;this.pollingTransport=null;this.socketTransport=null;return this},start:function(){if(this.getStarted()){Ext.cf.util.Logger.debug("AutoTransport already started");return}Ext.cf.util.Logger.debug("AutoTransport starting");this.setStarted(true);if(!this.pollingTransport){this.pollingTransport=Ext.create(this.transportClasses.polling,this.config);this.relayEvents(this.pollingTransport,["receive","forbidden","connected","offline"])}this.activeTransport=this.pollingTransport;this.activeTransport.start();if(!this.socketTransport){if(Ext.cf.messaging.transports.WebSocketTransport.isSupported()){this.socketTransport=Ext.create(this.transportClasses.websocket,this.config);this.relayEvents(this.socketTransport,["receive","forbidden","connected","offline"]);this.socketTransport.on({connected:{fn:this.onSocketActive,scope:this}})}else{Ext.cf.util.Logger.debug("AutoTransport: websockets not supported, XHR polling only")}}this.socketTransport.start();return true},onSocketActive:function(){Ext.cf.util.Logger.debug("AutoTransport: websocket connection established, switching active transport");this.pollingTransport.stop();this.activeTransport=this.socketTransport},stop:function(){this.setStarted(false);if(this.pollingTransport){this.pollingTransport.stop()}if(this.socketTransport){this.socketTransport.stop()}},send:function(a,b){this.activeTransport.send(a,b)},subscribe:function(a,b){this.activeTransport.send(a,b)},unsubscribe:function(a,b){this.activeTransport.send(a,b)}});Ext.define("Ext.cf.messaging.Transport",{requires:["Ext.data.proxy.LocalStorage","Ext.cf.messaging.EnvelopeWrapper","Ext.cf.messaging.transports.PollingTransport","Ext.cf.messaging.transports.WebSocketTransport","Ext.cf.messaging.transports.AutoTransport","Ext.cf.util.ErrorHelper","Ext.cf.ServiceDefinitions","Ext.cf.util.ServiceVersionHelper"],mixins:{observable:"Ext.util.Observable"},transport:null,listeners:{},undeliveredIncomingStore:null,retryIncomingInProgress:false,undeliveredOutgoingStore:null,retryOutgoingInProgress:false,transportClasses:{polling:"Ext.cf.messaging.transports.PollingTransport",websocket:"Ext.cf.messaging.transports.WebSocketTransport",auto:"Ext.cf.messaging.transports.AutoTransport"},config:{url:"https://api.sencha.io",piggybacking:true,maxEnvelopesPerReceive:10,transportName:"auto",debug:false,connected:false,undeliveredIncomingExpiryInterval:60*60*24*1000,undeliveredIncomingMaxCount:100,undeliveredOutgoingExpiryInterval:60*60*24*1000,undeliveredOutgoingMaxCount:100,waitAfterBrowserOnline:5000},constructor:function(d){var c=this;this.initConfig(d);this.mixins.observable.constructor.call(this);this.listeners={};Ext.cf.util.Logger.info("Transport type ",this.getTransportName());var b=Ext.io.Io.getStoreDirectory();this.undeliveredIncomingStore=Ext.create("Ext.data.Store",{model:"Ext.cf.messaging.EnvelopeWrapper",proxy:{type:"localstorage",id:"sencha-io-undelivered-incoming-envelopes"},autoLoad:true,autoSync:false});this.undeliveredOutgoingStore=Ext.create("Ext.data.Store",{model:"Ext.cf.messaging.EnvelopeWrapper",proxy:{type:"localstorage",id:"sencha-io-undelivered-outgoing-envelopes"},autoLoad:true,autoSync:false});b.update("sencha-io-undelivered-incoming-envelopes","queue",{direction:"in"});b.update("sencha-io-undelivered-outgoing-envelopes","queue",{direction:"out"});Ext.cf.util.Logger.debug("Transport config",this.config);var e=this.getTransportName();var a=this.transportClasses[e];if(!a){Ext.cf.util.Logger.error("No transport class for "+e+" defaulting to 'auto' transport.");a=this.transportClasses.auto}this.transport=Ext.create(a,this.config);this.setupEventHandlersHandler();this.on("connected",function(){c.retryUndeliveredOutgoingMessages()});this.transport.start();return this},start:function(){if(this.transport){this.transport.start()}else{Ext.cf.util.Logger.error("Transport: attempted to start without a valid transport class.")}},setupEventHandlersHandler:function(){var a=this;this.transport.on("receive",function(b){a.receive(b)});this.transport.on("offline",function(b){a.setConnected(false);a.fireEvent("offline")});window.addEventListener("offline",function(b){Ext.cf.util.Logger.warn("Browser fired offline event. Stopping connection; assuming offline",b);a.setConnected(false);a.transport.stop();a.fireEvent("offline")},false);window.addEventListener("online",function(){Ext.cf.util.Logger.info("Browser fired online event. Will attempt to restart connection.");setTimeout(function(){a.transport.start()},a.getWaitAfterBrowserOnline())},false);this.transport.on("connected",function(b){a.setConnected(true);a.fireEvent("connected",b)});this.transport.on("forbidden",function(b){if(b&&b.code==="INVALID_SID"){a.setConnected(false);a.transport.stop();a.fireEvent("invalidsession",b)}})},retryUndeliveredOutgoingMessages:function(){var c=this;if(c.retryOutgoingInProgress){Ext.cf.util.Logger.debug("Another retry (outgoing) already in progress, skipping...");return}var b=this.undeliveredOutgoingStore.getCount();if(b>0){Ext.cf.util.Logger.debug("Transport trying redelivery for outgoing envelopes:",b)}else{return}c.retryOutgoingInProgress=true;try{var d=new Date().getTime();var h=c.getUndeliveredOutgoingExpiryInterval();var a=this.undeliveredOutgoingStore.getAt(0);var g=a.data.e;if(g.expires){Ext.cf.util.Logger.debug("Transport: envelope has expires value of ",g.expires);h=g.expires*1000}if((d-a.data.ts)>h){Ext.cf.util.Logger.warn("Buffered outgoing envelope is too old, discarding",a);this.undeliveredOutgoingStore.remove(a);c.undeliveredOutgoingStore.sync();c.retryOutgoingInProgress=false;setTimeout(function(){c.retryUndeliveredOutgoingMessages()},1)}else{if(c.getConnected()){Ext.cf.util.Logger.debug("Transport trying redelivery for outgoing envelope: "+a);c.transport.send(g,function(e,i){if(i){Ext.cf.util.Logger.debug("Redelivery failed for outgoing envelope, keeping it queued",a,e);c.retryOutgoingInProgress=false}else{Ext.cf.util.Logger.debug("Transport: Delivered outgoing envelope on retry",a);c.undeliveredOutgoingStore.remove(a);c.undeliveredOutgoingStore.sync();c.retryOutgoingInProgress=false;if(c.undeliveredOutgoingStore.getCount()>0){Ext.cf.util.Logger.debug("Transport: there are outgoing messages left to deliver:",c.undeliveredOutgoingStore.getCount());setTimeout(function(){c.retryUndeliveredOutgoingMessages()},1)}else{Ext.cf.util.Logger.debug("Transport: All queued outgoing messages delivered ")}}})}else{Ext.cf.util.Logger.debug("Browser still offline, not retrying delivery for outgoing envelope",a);c.retryOutgoingInProgress=false}}}catch(f){c.retryOutgoingInProgress=false;Ext.cf.util.Logger.debug("Error during retryUndeliveredOutgoingMessages",f)}},retryUndeliveredIncomingMessages:function(){var b=this;if(b.retryIncomingInProgress){Ext.cf.util.Logger.debug("Another retry (incoming) already in progress, skipping...");return}b.retryIncomingInProgress=true;try{var c=new Date().getTime();var h=b.getUndeliveredIncomingExpiryInterval();var g=this.undeliveredIncomingStore.getRange();if(g.length>0){Ext.cf.util.Logger.debug("Transport trying redelivery for incoming envelopes:",g.length)}for(var d=0;d<g.length;d++){var a=g[d];var f=a.data.e;var e=this.listeners[f.service];if(e){e.listener.call(e.scope,f);Ext.cf.util.Logger.debug("Delivered incoming envelope on retry",a);this.undeliveredIncomingStore.remove(a)}else{if((c-a.data.ts)>h){Ext.cf.util.Logger.warn("Buffered incoming envelope is too old, discarding",a);this.undeliveredIncomingStore.remove(a)}}}}finally{this.undeliveredIncomingStore.sync();b.retryIncomingInProgress=false}},getDeveloperSid:function(){return Ext.io.Io.getIdStore().getSid("developer")},getDeviceSid:function(){return Ext.io.Io.getIdStore().getSid("device")},getUserSid:function(){return Ext.io.Io.getIdStore().getSid("user")},getDeviceId:function(){return Ext.io.Io.getIdStore().getId("device")},setListener:function(c,d,b){Ext.cf.util.Logger.debug("Transport Adding listener for service",c);this.listeners[c]={listener:d,scope:b};var a=this;setTimeout(function(){a.retryUndeliveredIncomingMessages()},1)},removeListener:function(a){delete this.listeners[a]},sendToService:function(c,d,a,b){this.send({service:c,msg:d},a,b)},sendToClient:function(d,e,a,b,c){if(e&&typeof(e)==="object"){e.to=d;this.send({service:"CourierService",msg:e,expires:a},b,c)}else{Ext.cf.util.Logger.error("Message is not a JSON object");b.call(c,Ext.cf.util.ErrorHelper.get("MESSAGE_NOT_JSON",e))}},send:function(d,b,c){var a=this;Ext.cf.util.ServiceVersionHelper.get(d.service,function(f){d.sv=f;if(a.getDebug()){d.debug=true}d.from=a.getDeviceId();var h=a.getDeviceSid();if(h){d.deviceSid=h}var e=a.getDeveloperSid();if(e){d.developerSid=e}var g=a.getUserSid();if(g){d.userSid=g}Ext.cf.util.Logger.debug("Transport.send "+JSON.stringify(d));if(a.getConnected()){a.transport.send(d,function(i,j){if(b){if(!j){b.call(c,i)}if(i&&j){Ext.cf.util.Logger.warn("Error delivering outgoing envelope",d,i);a.bufferOutgoingEnvelope(d)}}})}else{a.bufferOutgoingEnvelope(d)}})},bufferOutgoingEnvelope:function(b){if(this.undeliveredOutgoingStore){if(b.expires==0){Ext.cf.util.Logger.debug("Dropping undelivered message with an expiry of zero.",b);return}if(this.undeliveredOutgoingStore.getCount()<this.getUndeliveredOutgoingMaxCount()){var a=this.undeliveredOutgoingStore.add(Ext.create("Ext.cf.messaging.EnvelopeWrapper",{e:b,ts:(new Date().getTime())}));this.undeliveredOutgoingStore.sync();Ext.cf.util.Logger.debug("Added to outgoing queue, will retry delivery later",a)}else{Ext.cf.util.Logger.warn("Queue full, discarding undeliverable outgoing message!",b)}}},receive:function(d){Ext.cf.util.Logger.debug("Transport.receive "+JSON.stringify(d));var b=Ext.cf.ServiceDefinitions[d.service];if(!b){Ext.cf.util.Logger.error("Unknown service",d.service,". Envelope discarded",d)}else{if(b!==d.sv){Ext.cf.util.Logger.error("Expected service",d.service,"version",b,", actual ",d.sv,". Envelope discarded",d)}else{if(this.listeners[d.service]){var c=this.listeners[d.service];c.listener.call(c.scope,d)}else{Ext.cf.util.Logger.error("Transport.receive no listener for service '",d.service,"'.",this.listeners);if(this.undeliveredIncomingStore){if(this.undeliveredIncomingStore.getCount()<this.getUndeliveredIncomingMaxCount()){var a=this.undeliveredIncomingStore.add(Ext.create("Ext.cf.messaging.EnvelopeWrapper",{e:d,ts:(new Date().getTime())}));Ext.cf.util.Logger.debug("Added to incoming queue, will retry delivery later",a);this.undeliveredIncomingStore.sync()}else{Ext.cf.util.Logger.warn("Queue full, discarding undeliverable incoming message!",d)}}}}}},subscribe:function(d,b,c){var a=this;Ext.cf.util.Logger.debug("Transport.subscribe "+d);Ext.cf.util.ServiceVersionHelper.get(d,function(e){var f={deviceId:a.getDeviceId(),service:d,sv:e};a.transport.subscribe(f,function(g){if(b){b.call(c,g)}})})},unsubscribe:function(d,b,c){var a=this;Ext.cf.util.Logger.debug("Transport.unsubscribe "+d);Ext.cf.util.ServiceVersionHelper.get(d,function(e){var f={deviceId:a.getDeviceId(),service:d,sv:e};a.transport.unsubscribe(f,function(g){if(b){b.call(c,g)}})})}});Ext.define("Ext.cf.messaging.Rpc",{requires:["Ext.cf.util.Logger","Ext.cf.util.ErrorHelper"],config:{transport:null,rpcTimeoutDuration:5*60*1000,rpcTimeoutCheckInterval:30*1000},rpcTimeoutInterval:null,constructor:function(a){this.initConfig(a);var b=this.getTransport();b.on({connected:this.handleOnline,offline:this.handleOffline,scope:this});this.lastCheck=new Date().getTime();this.callCount=0;this.callMap={};return this},handleOnline:function(){this.setNextCheck()},handleOffline:function(){this.cancelNextCheck()},setNextCheck:function(){var a=this;Ext.cf.util.Logger.debug("Outstanding RPC requests",this.callCount);this.cancelNextCheck();if(this.callCount<=0){return}this.rpcTimeout=setTimeout(function(){a.processRpcTimeouts()},this.getRpcTimeoutCheckInterval())},cancelNextCheck:function(){if(this.rpcTimeout){clearTimeout(this.rpcTimeout);this.rpcTimeout=undefined}},removeCall:function(a){delete this.callMap[a];this.callCount--;this.setNextCheck()},processRpcTimeouts:function(){var j=this;var b=this.lastCheck;var h=0;var f=new Date().getTime();if(this.getTransport().getConnected()!=true){return}Ext.cf.util.Logger.debug("Checking for expired PRC calls.");if(b+(this.getRpcTimeoutCheckInterval()*2)<f){h=f-b}var g=this.getRpcTimeoutDuration();this.lastCheck=f;var d=[];try{for(var a in this.callMap){var c=this.callMap[a];if(h>0){c.requestTime+=h}if(c&&c.requestTime&&((f-c.requestTime)>g)){d.push(a)}}d.forEach(function(e){var l=j.callMap[e];if(l&&l.callback){j.removeCall(e);Ext.cf.util.Logger.warn("RPC request has timed out as there was no reply from the server. Correlation Id:",e,l.service,l.method);Ext.cf.util.Logger.warn("See documentation for Ext.io.Io.setup (rpcTimeoutDuration, rpcTimeoutCheckInterval) to configure the timeout check");var k=Ext.cf.util.ErrorHelper.get("RPC_TIMEOUT",e);l.callback({status:"error",error:k})}})}catch(i){Ext.cf.util.Logger.error("Error running RPC timeout checks",i)}this.setNextCheck()},currentCallId:0,generateCallId:function(){return ++this.currentCallId},subscribe:function(a){this.callback(a.msg["corr-id"],a)},addCall:function(b,c){var a=this.generateCallId();b.msg["corr-id"]=a;b.from=this.getTransport().getDeviceId();this.callMap[a]={callback:c,requestTime:(new Date().getTime()),service:b.service,method:b.msg.method};this.callCount++;this.setNextCheck();return a},dispatch:function(c,d){var a=this;var b=this.addCall(c,d);this.getTransport().send(c,function(e){if(e){a.callMap[b].callback({status:"error",error:e});a.removeCall(b)}},this)},callback:function(a,j){var c=parseInt(a,10);if(!this.callMap[c]){Ext.cf.util.Logger.warn("No callback found for this correspondance id: "+a,j)}else{var b=this.callMap[c];var e=new Date().getTime();var i=e-b.requestTime;var g=j.debug===true?(j.debugInfo.outTime-j.debugInfo.inTime):"NA";var d=(g==="NA")?"NA":(i-g);var f=j.service+"."+b.method;Ext.cf.util.Logger.perf(a,f,"total time",i,"server time",g,"network time",d);if(j.msg.result.status!=="success"){if(!Ext.cf.util.ErrorHelper.isValidError(j.msg.result.error)){Ext.cf.util.Logger.debug("RPC error is of incorrect format:",j.msg.result.error);var h=Ext.cf.util.ErrorHelper.get("UNKNOWN_RPC_ERROR");h.details=j.msg.result.error;j.msg.result.error=h}}this.removeCall(c);b.callback(j.msg.result)}},call:function(f,c,b,e,a){var d;this.getTransport().setListener(c,this.subscribe,this);switch(b){case"subscriber":d={service:c,from:this.getTransport().getDeviceId(),msg:{method:e,args:a}};this.dispatch(d,f);break;default:Ext.cf.util.Logger.error(b+" is an invalid RPC style");throw"Invalid RPC style: "+b}}});Ext.define("Ext.cf.messaging.PubSub",{config:{transport:undefined},constructor:function(a){this.initConfig(a);return this},channelCallbackMap:{},handleIncoming:function(d){var a=d.msg.queue;if(a&&this.channelCallbackMap[a]){var c=this.channelCallbackMap[a];var b={deviceId:d.from,userId:d.userId,developerId:d.developerId};c.callback.call(c.scope,b,d.msg.data)}else{Ext.cf.util.Logger.warn("PubSub: No callback for channelName "+a)}},publish:function(b,c,e,a,f,d){this.getTransport().send({service:"ChannelService",expires:a,msg:{api:"publish",queue:b,qKey:c,data:e}},f,d)},subscribe:function(b,c,e,d,a){this.getTransport().setListener("ChannelService",this.handleIncoming,this);this.channelCallbackMap[b]={callback:e,scope:d};this.getTransport().send({service:"ChannelService",msg:{api:"subscribe",queue:b,qKey:c}},function(f){if(f){Ext.cf.util.Logger.error("Error subscribing to channel",b,f);if(a){a.call(d,f)}}else{Ext.cf.util.Logger.info("channel: "+this.getTransport().getDeviceId()+" subscribed to "+b)}},this)},unsubscribe:function(a,b,d,c){delete this.channelCallbackMap[a];this.getTransport().send({service:"ChannelService",msg:{api:"unsubscribe",queue:a,qKey:b}},function(e){Ext.cf.util.Logger.info("channel: "+this.getTransport().getDeviceId()+" unsubscribed to "+a);if(d){d.call(c,e)}},this)}});Ext.define("Ext.io.MessagingProxy",{config:{name:null,descriptor:null,transport:null},constructor:function(a){this.initConfig(a);return this},send:function(a,c,b){this.getTransport().sendToService(this.getName(),a.message,c,b)},receive:function(b,a){this.getTransport().setListener(this.getName(),function(c){b.call(a,c.from,c.msg)},this)},subscribe:function(c,b){var a=this;a.getTransport().subscribe(a.getName(),function(d){if(d){c.call(b,d)}else{a.getTransport().setListener(a.getName(),function(e){c.call(b,e.service,e.msg)},a)}},a)},unsubscribe:function(b,a){this.getTransport().unsubscribe(this.getName(),b,a)}});Ext.define("Ext.cf.messaging.Messaging",{requires:["Ext.cf.messaging.Registry","Ext.cf.messaging.Transport","Ext.cf.messaging.Rpc","Ext.cf.messaging.PubSub","Ext.io.Proxy","Ext.io.MessagingProxy","Ext.cf.util.ErrorHelper"],transport:null,rpc:null,pubsub:null,constructor:function(a){this.initConfig(a);this.registry=Ext.create("Ext.io.Registry");this.transport=Ext.create("Ext.cf.messaging.Transport",a);a.transport=this.transport;this.rpc=Ext.create("Ext.cf.messaging.Rpc",a);this.pubsub=Ext.create("Ext.cf.messaging.PubSub",a);return this},proxyCache:{},getService:function(d,f,e){var c=this;if(!d.name||d.name===""){Ext.cf.util.Logger.error("Service name is missing");var b=Ext.cf.util.ErrorHelper.get("SERVICE_NAME_MISSING");f.call(e,undefined,b)}else{var a=this.proxyCache[d.name];if(a){f.call(e,a)}else{c.registry.getServiceDescriptor(d.name,function(h,i){if(i||typeof(h)==="undefined"||h===null){Ext.cf.util.Logger.error("Unable to load service descriptor for "+d.name);var g=Ext.cf.util.ErrorHelper.get("SERVICE_DESCRIPTOR_LOAD_ERROR",d.name);g.cause=i;f.call(e,undefined,g)}else{if(h.kind=="rpc"){a=Ext.create("Ext.io.Proxy",{name:d.name,descriptor:h,rpc:c.rpc})}else{a=Ext.create("Ext.io.MessagingProxy",{name:d.name,descriptor:h,transport:c.transport})}c.proxyCache[d.name]=a;f.call(e,a)}})}}},sendContent:function(d,g,e){var b=this;var c=b.config.csUrl||b.config.url||"https://api.sencha.io";if(!d.file||!d.file.name||d.file.name===""||!d.file.file||!d.file.ftype||!d.containerid){var a={code:"PARAMS_MISSING",message:"Some of parameters are missing"};g.call(e,null,a)}else{var f=new XMLHttpRequest();f.onreadystatechange=function(){if(f.readyState==4){var j=function(m){var k;try{k=JSON.parse(m)}catch(l){return m}return k};var h=j(f.responseText);if(h.code==200){g.call(e,h.reference)}else{var i={code:"STORE_ERROR",message:h.message};g.call(e,null,i)}}};f.open("POST",c+"/sio/content/"+d.containerid+"/"+d.file.ftype+"/",true);f.setRequestHeader("X-File-Name",encodeURIComponent(d.file.name));f.setRequestHeader("Content-Type","application/octet-stream; charset=binary");f.setRequestHeader("X-Requested-With","XMLHttpRequest");f.setRequestHeader("Content-Encoding","binary");f.setRequestHeader("X-Resource-Type",d.file.ftype);f.setRequestHeader("X-Resource-Id",d.containerid);f.setRequestHeader("X-Auth-Token",Ext.io.Io.getIdStore().getSid("developer"));f.send(d.file.file)}}});Ext.define("Ext.cf.naming.LocalStore",{getItem:function(b){var a=window.localStorage;if(a){var c=a.getItem(b);if(c==="null"){return null}else{if(c==="undefined"){return undefined}else{return c}}}},setItem:function(b,c){var a=window.localStorage;if(a){a.setItem(b,c)}},removeItem:function(b){var a=window.localStorage;if(a){a.removeItem(b)}}});Ext.define("Ext.cf.naming.ConfigStore",{requires:["Ext.cf.naming.LocalStore"],config:{localStore:null},memCache:{},constructor:function(){this.setLocalStore(Ext.create("Ext.cf.naming.LocalStore"))},getStoreKey:function(a){if(a.join){a=a.join("-")}return"sencha-io-config-"+a},getObjectConfig:function(b){b=this.getStoreKey(b);var a=this.memCache[b];if(!a){a=this.getLocalStore().getItem(b);if(a){a=JSON.parse(a)}this.memCache[b]=a}return a},setObjectConfig:function(b,a){b=this.getStoreKey(b);this.memCache[b]=a;a=JSON.stringify(a);this.getLocalStore().setItem(b,a)},remove:function(a){a=this.getStoreKey(a);delete this.memCache[a];this.getLocalStore().removeItem(a)}});Ext.define("Ext.cf.naming.CookieStore",{hasItem:function(a){return(new RegExp("(?:^|;\\s*)"+escape(a).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=")).test(document.cookie)},getItem:function(a){if(!a||!this.hasItem(a)){return null}return unescape(document.cookie.replace(new RegExp("(?:^|.*;\\s*)"+escape(a).replace(/[\-\.\+\*]/g,"\\$&")+"\\s*\\=\\s*((?:[^;](?!;))*[^;]?).*"),"$1"))},setItem:function(c,g,a){var f="";if(a&&a>0){var e=new Date();e.setTime(e.getTime()+a*24*60*60*1000);f=" expires="+e.toUTCString()+";"}document.cookie=escape(c)+"="+escape(g)+"; path=/;"+f;var b=this.countSubStrings(document.cookie,c);if(b>1){Ext.cf.util.Logger.error("Found",b,"cookies with the name",c)}},countSubStrings:function(b,c){var d=0;var a=0;while(true){a=b.indexOf(c,a);if(a!=-1){d++;a+=c.length}else{break}}return d},removeItem:function(c,b){b=b||window.location.host||"";if(!c||!this.hasItem(c)){return}var a=new Date();a.setDate(a.getDate()-1);document.cookie=escape(c)+"=; expires="+a.toGMTString()+";";document.cookie=escape(c)+"=; expires="+a.toGMTString()+"; path=/;";document.cookie=escape(c)+"=; expires="+a.toGMTString()+"; path=/;domain="+b+";";var d=b.indexOf(".");if(d!=-1){b=b.substr(d);document.cookie=escape(c)+"=; expires="+a.toGMTString()+"; domain="+b+";";document.cookie=escape(c)+"=; expires="+a.toGMTString()+"; path=/;domain="+b+";"}}});Ext.define("Ext.cf.naming.SessionStore",{getItem:function(b){var a=window.sessionStorage;if(a){return a.getItem(b)}},setItem:function(b,c){var a=window.sessionStorage;if(a){a.setItem(b,c)}},removeItem:function(b){var a=window.sessionStorage;if(a){a.removeItem(b)}}});Ext.define("Ext.cf.naming.IDStore",{requires:["Ext.cf.naming.CookieStore","Ext.cf.naming.LocalStore","Ext.cf.naming.SessionStore"],config:{cookieStore:null,localStore:null,sessionStore:null,sessionExpiry:0,prefix:"sencha.io."},constructor:function(a){this.sidCache={};this.initConfig(a);this.setCookieStore(Ext.create("Ext.cf.naming.CookieStore"));this.setLocalStore(Ext.create("Ext.cf.naming.LocalStore"));this.setSessionStore(Ext.create("Ext.cf.naming.SessionStore"))},getId:function(a){var b=this.getPrefix()+a+".id";return this.getLocalStore().getItem(b)},getKey:function(a){var b=this.getPrefix()+a+".key";return this.getLocalStore().getItem(b)},getSid:function(a){var b=a+".sid";var c=this.sidCache[b];if(!c){c=this.getCookieStore().getItem(b);if(!c){c=this.getLocalStore().getItem(this.getPrefix()+b)}else{this.getLocalStore().setItem(this.getPrefix()+b,c)}this.sidCache[b]=c}return c},setId:function(a,c){var b=this.getPrefix()+a+".id";return this.getLocalStore().setItem(b,c)},setKey:function(a,b){var c=this.getPrefix()+a+".key";return this.getLocalStore().setItem(c,b)},setSid:function(a,b,d){var c=a+".sid";d=d?d:this.getSessionExpiry();this.sidCache[c]=b;this.getLocalStore().setItem(this.getPrefix()+c,b);this.getCookieStore().setItem(c,b,d)},remove:function(a,b){var c=a+"."+b;var d=this.getPrefix()+c;this.sidCache[c]=undefined;this.getCookieStore().removeItem(c);this.getSessionStore().removeItem(c);this.getLocalStore().removeItem(d)},stash:function(b,d,a){var e=b+"."+d;var g=this.getPrefix()+e;var c=this.getCookieStore().getItem(e)||a;var f=this.getLocalStore().getItem(g);if(c){if(f){if(c!=f){this.getLocalStore().setItem(g,c)}else{}}else{this.getLocalStore().setItem(g,c)}}else{}return c||f}});Ext.define("Ext.io.Object",{mixins:{observable:"Ext.util.Observable"},inheritableStatics:{getObject:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"NamingRpcService"},function(g,f){if(g){var e=this;g.get(function(h){if(h.status=="success"){c.call(b,e.objectFactory(h.value),undefined,h.value)}else{c.call(b,undefined,h.error)}},e.$className,a)}else{c.call(b,undefined,f)}},this)},this)},getCachedObject:function(b,g,d){var c=Ext.io.Io.getConfigStore();var f=[this.$className,b];var e=c.getObjectConfig(f);if(e){g.call(d,this.objectFactory(e))}else{var a=function(j,i,h){if(j){c.setObjectConfig(f,h)}g.call(d,j,i)};this.getObject(b,a,d)}},cacheObjectConfig:function(b,a){var d=[this.$className,b];var c=Ext.io.Io.getConfigStore();c.setObjectConfig(d,a)},objectFactory:function(a){return Ext.create(this.$className,{id:a._key,data:a.data})},removeCachedObject:function(a){var b=Ext.io.Io.getConfigStore();var d=[this.$className,a];var c=b.remove(d)},findObjects:function(c,e,b,d,a){Ext.io.Io.getMessagingProxy(function(f){f.getService({name:"NamingRpcService"},function(i,h){if(i){var g=this;i.find(function(j){if(j.status=="success"){var l=[];for(var k=0;k<j.value.length;k++){l.push(Ext.create(g.$className,{id:j.value[k]._key,data:j.value[k].data}))}d.call(a,l)}else{d.call(a,undefined,j.error)}},g.$className,c,e,b)}else{d.call(a,undefined,h)}},this)},this)}},config:{id:null,data:null},constructor:function(a){this.initConfig(a);if(a._key){this.setId(a._key)}},watch:function(b){var a=this;Ext.io.Io.registerForNamingEvents(a,b);a.registeredForNamingEvents=true;return a},ignore:function(b){var a=this;Ext.io.Io.unregisterForNamingEvents(a,b);a.registeredForNamingEvents=false;return a},update:function(b,c,a){this._update(b,false);Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"NamingRpcService"},function(f,e){if(f){f.update(function(g){if(g.status=="success"){c.call(a)}else{c.call(a,g.error)}},this.$className,this.getId(),b)}else{c.call(a,e)}},this)},this)},_update:function(e,b){var a=Ext.Object.merge(this.getData(),e);this.setData(a);var c=Ext.io.Io.getConfigStore();var f=[this.$className,this.getId()];var d=c.getObjectConfig(f);if(d){d.data=a;c.setObjectConfig(f,d)}this.fireEvent("updated",e,b)},removeCached:function(){var a=Ext.io.Io.getConfigStore();var c=[this.$className,this.getId()];var b=a.remove(c)},destroy:function(b,a){Ext.io.Io.getMessagingProxy(function(c){c.getService({name:"NamingRpcService"},function(e,d){if(e){e.destroy(function(f){if(f.status=="success"){b.call(a)}else{b.call(a,f.error)}},this.$className,this.getId())}else{b.call(a,d)}},this)},this)},createRelatedObject:function(e,a,c,d,b){Ext.io.Io.getMessagingProxy(function(f){f.getService({name:"NamingRpcService"},function(h,g){if(h){h.createRelatedObject(function(i){if(i.status=="success"){var j=Ext.create(a,{id:i.value._key,data:i.value.data});d.call(b,j)}else{d.call(b,undefined,i.error)}},this.$className,this.getId(),e,c)}else{d.call(b,undefined,g)}},this)},this)},getRelatedObject:function(b,c,a,e,d){Ext.io.Io.getMessagingProxy(function(f){f.getService({name:"NamingRpcService"},function(h,g){if(h){h.getRelatedObject(function(i){if(i.status=="success"){var j=null;if(i.value&&i.value!==null){j=Ext.create(b,{id:i.value._key,data:i.value.data})}e.call(d,j)}else{e.call(d,undefined,i.error)}},this.$className,this.getId(),b.$className,c,a)}else{e.call(d,undefined,g)}},this)},this)},getRelatedObjects:function(b,a,d,c){Ext.io.Io.getMessagingProxy(function(e){e.getService({name:"NamingRpcService"},function(g,f){if(g){g.getRelatedObjects(function(h){if(h.status=="success"){var k=[];for(var j=0;j<h.value.length;j++){k.push(Ext.create(b,{id:h.value[j]._key,data:h.value[j].data}))}d.call(c,k)}else{d.call(c,undefined,h.error)}},this.$className,this.getId(),b.$className,a)}else{d.call(c,undefined,f)}},this)},this)},findRelatedObjects:function(b,c,a,e,f,d){Ext.io.Io.getMessagingProxy(function(g){g.getService({name:"NamingRpcService"},function(i,h){if(i){i.findRelatedObjects(function(j){if(j.status=="success"){var l=[];for(var k=0;k<j.value.length;k++){l.push(Ext.create(b,{id:j.value[k]._key,data:j.value[k].data}))}f.call(d,l)}else{f.call(d,undefined,j.error)}},this.$className,this.getId(),b.$className,c,a,e)}else{f.call(d,undefined,h)}},this)},this)}});Ext.define("Ext.io.Channel",{extend:"Ext.io.Object",mixins:{observable:"Ext.util.Observable"},statics:{get:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"name",type:"string"}],arguments,"Ext.io.Channel","get")){c.call(b,Ext.create("Ext.io.Channel",a))}},find:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"query",type:"string"}],arguments,"Ext.io.Channel","find")){Ext.io.App.getCurrent(function(e,d){if(e){e.findChannels(a,c,b)}else{c.call(b,e,d)}})}}},config:{name:null,queueName:null,subscribeOnStart:true,boundStores:{}},constructor:function(a){this.initConfig(a);this.mixins.observable.constructor.call(this,a);this.boundStores=[];this._init(function(c,f){this.fireEvent("initComplete");if(f){Ext.cf.util.Logger.error("Unable to create Chanel ",this,f)}else{if(c._key){this.setId(c._key)}this.setData(c.data);if(this.getSubscribeOnStart()){this.subscribe()}var b=this.getBoundStores();var d;for(d in b){var e={enabled:true,transform:undefined};var g=b[d];if(typeof g=="boolean"){e.enabled=g}else{if(!g){e.enabled=true}else{if(typeof g=="function"){e={enabled:true,transform:e}}else{e.enabled=(typeof g.enabled=="boolean"?g.enabled:true);e.transform=g.transform}}}b[d]=e}}})},_init:function(g){var c=this;var f=Ext.io.Io.getIdStore().getId("app");var a=this.getName();var d=this.getData();var b=Ext.io.Io.getConfigStore();if(!a&&d.name){a=d.name;this.setSubscribeOnStart(false)}else{d=b.getObjectConfig("channel-"+a)}var e=f+"."+a;this.setQueueName(e);if(!d){Ext.io.Io.getMessagingProxy(function(h){h.getService({name:"AppService"},function(k,j){var i=this;if(k){k.getChannel(function(l){if(l.status=="success"){b.setObjectConfig("channel-"+a,l.value);g.call(c,l.value)}else{g.call(c,undefined,l.error)}},f,{name:a})}else{g.call(c,undefined,j)}},this)},this)}else{g.call(c,d)}},publish:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"message",type:"object|string"},{name:"expires",type:"number",optional:true}],arguments,"Ext.io.Channel","publish")){Ext.io.Io.getMessagingProxy(function(d){d.pubsub.publish(this.getQueueName(),this.getId(),a.message,a.expires,c,b)},this)}},subscribe:function(c,b){if(!this.subscribedFn){this.subscribedFn=function a(d,e){d=Ext.create("Ext.io.Sender",d);this.fireEvent("message",d,e);this.updateStores(d,e)};Ext.io.Io.getMessagingProxy(function(d){d.pubsub.subscribe(this.getQueueName(),this.getId(),this.subscribedFn,this,Ext.emptyFn)},this)}if(c){this.on("message",c,b)}},unsubscribe:function(b,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Channel","unsubscribe")){Ext.io.Io.getMessagingProxy(function(c){c.pubsub.unsubscribe(this.getQueueName(),this.getId(),b,a)},this)}},bindStore:function(a,d,e,c){if(Ext.cf.util.ParamValidator.validateApi([{name:"store",type:"object|string"},{name:"transform",type:"null|function",optional:true},{name:"scope",type:"null|object|function",optional:true},{name:"enabled",type:"boolean",optional:true}],arguments,"Ext.io.Channel","bindStore")){var b=Ext.getStore(a);if(!b){Ext.cf.util.Logger.warn("Ext.io.Channel.bindStore could not find store",b)}var f=this.getBoundStores();e=e||this;if(d){d=Ext.bind(d,e)}f[b]={enabled:typeof c=="boolean"?c:false,transform:d};Ext.cf.util.Logger.debug("Binding store "+a+" to channel",this)}},unbindStore:function(a){if(Ext.cf.util.ParamValidator.validateApi([{name:"store",type:"string"}],arguments,"Ext.io.Channel","unbindStore")){var c=this.getBoundStores();if(c){var b=c[a];if(b){c[a]=undefined}else{Ext.cf.util.Logger.warn("Ext.io.Channel.unbindStore could not find store to unbind",a)}}}},disableStore:function(a,b){if(Ext.cf.util.ParamValidator.validateApi([{name:"store",type:"string"},{name:"disable",type:"boolean",optional:"true"}],arguments,"Ext.io.Channel","diableStore")){var d=this.getBoundStores();if(typeof b=="undefined"){b=true}if(d){var c=d[a];if(c){c.enabled=!b;return}}Ext.cf.util.Logger.error("Could not find store in channel, check store id and channel configuration",{storeId:a,disable:b,channel:this})}},updateStores:function(b,d){var c=this.getBoundStores();var a;for(a in c){this.updateStore(b,d,a,c[a])}},updateStore:function(e,g,c,f){if(f){var d=Ext.getStore(c);if(!d){Ext.cf.util.Logger.error("Could not find store in channel, check store id and channel configuration",c,f)}else{if(f.enabled===true){var a=function(h){if(h){d.add(h)}};var b=f.transform?f.transform(a,e,g,d,this):g;if(b){d.add(b)}}else{Ext.cf.util.Logger.debug("Ext.io.Channel: skipping store update as it is disabled",c,this)}}}}});Ext.define("Ext.io.WithPicture",{uploadPicture:function(a,d,b){if(typeof a.file!="undefined"){a.file.ftype="icon";a.containerid=this.getId();Ext.io.Io.getMessagingProxy(function(e){e.sendContent(a,function(f,i){if(f){var g=a.file.name.split(".");var h="."+g[g.length-1];this.setPicture(f,h,function(k,j){d.call(b,k,j)},this)}else{d.call(b,undefined,i)}},this)},this)}else{var c=Ext.cf.util.ErrorHelper.get("FILE_PARAMS_MISSING");d.call(b,undefined,c)}},setPicture:function(c,b,d,a){this.getServiceName(function(f,e){if(!f){Ext.io.Io.getMessagingProxy(function(g){g.getService({name:e},function(i,h){if(i){i.setPicture(function(j){if(j.status=="success"){d.call(a,j.value)}else{d.call(a,undefined,j.error)}},this.$className,this.getId(),c,b)}else{d.call(a,undefined,h)}},this)},this)}else{d.call(a,undefined,f)}},this)},removePicture:function(b,a){this.getServiceName(function(d,c){if(!d){Ext.io.Io.getMessagingProxy(function(e){e.getService({name:c},function(g,f){if(g){g.removePicture(function(h){if(h.status=="success"){b.call(a)}else{b.call(a,h.error)}},this.$className,this.getId())}else{b.call(a,f)}},this)},this)}else{b.call(a,d)}},this)},getServiceName:function(c,b){var a;switch(this.$className){case"Ext.io.App":a="AppService";break;case"Ext.io.Team":a="TeamService";break}if(a){c.call(b,null,a)}else{c.call(b,Ext.cf.util.ErrorHelper.get("PIC_OP_NOT_SUPPORTED"),null)}}});Ext.define("Ext.io.App",{extend:"Ext.io.Object",requires:["Ext.io.Channel","Ext.cf.util.ErrorHelper"],mixins:{withpicture:"Ext.io.WithPicture"},statics:{setCurrent:function(a){this._currentApp=Ext.create("Ext.io.App",{id:a._key,data:a.data})},getCurrent:function(b,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.App","getCurrent")){b.call(a,this._currentApp)}},get:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"id",type:"string|number"}],arguments,"Ext.io.App","get")){this.getObject(a.id,c,b)}}},getGroup:function(b,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.App","getGroup")){this.getRelatedObject(Ext.io.Group,null,null,b,a)}},findDevices:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"query",type:"string"}],arguments,"Ext.io.App","findDevices")){Ext.io.Device.findObjects(a.query,0,1000,c,b)}},findChannels:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"query",type:"string"}],arguments,"Ext.io.App","findChannels")){this.findRelatedObjects(Ext.io.Channel,this.getId(),null,a.query,c,b)}},createVersion:function(b,e,c){var a=this;if(typeof b.file!="undefined"&&typeof b.data!="undefined"){b.file.ftype="package";b.containerid=a.getId();Ext.io.Io.getMessagingProxy(function(f){f.sendContent(b,function(g,i){if(g){b.data["package"]=g;var h=b.file.name.split(".");b.data.ext="."+h[h.length-1];b.data.namespace=b.file.ftype;a.createRelatedObject("createVersion",Ext.io.Version,b.data,e,c)}else{e.call(c,undefined,i)}},this)})}else{var d=Ext.cf.util.ErrorHelper.get("FILE_PARAMS_MISSING");e.call(c,undefined,d)}},getTeam:function(b,a){this.getRelatedObject(Ext.io.Team,null,null,b,a)},getVersions:function(b,a){Ext.require("Ext.io.Version",function(){this.getRelatedObjects(Ext.io.Version,null,b,a)},this)},getDeployedVersion:function(c,b){var a=this;Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"AppService"},function(e,f){if(e){e.getDeployedVersion(function(g){if(g.status=="success"){var h=null;if(g.value&&g.value!==null){h=Ext.create(Ext.io.Version,{id:g.value._key,data:g.value.data})}c.call(b,h)}else{c.call(b,undefined,g.error)}},a.getId())}else{c.call(b,undefined,f)}},this)})},regenerateSecret:function(c,b){var a=this;Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"AppService"},function(e,f){if(e){e.regenerateSecret(function(g){c.call(b,g.value,g.error)},a.getId())}else{c.call(b,undefined,f)}},this)})},getStatistics:function(b,d,c){var a=this;Ext.io.Io.getMessagingProxy(function(e){e.getService({name:"InstrumentationRpcService"},function(f,g){if(f){f.getEvents(function(h){d.call(c,h.value,h.error)},b)}else{d.call(c,undefined,g)}},this)})}});Ext.define("Ext.io.ux.Strings",{statics:{LABEL_USERNAME:"Username",LABEL_PASSWORD:"Password",LABEL_NEW_PASSWORD:"New Password",LABEL_OLD_PASSWORD:"Old Password",LABEL_CHANGE_PASSWORD:"Enter current and new password",CHANGE_PASSWORD_BUTTON:"Change Password",CHANGE_PASSWORD_MASK:"Updating Password...",CHANGE_PASSWORD_SUCCESS:"Password Updated",MSGBOX_PASSWORD_TITLE:"Password",MSGBOX_ERROR_TITLE:"Error"}});Ext.define("Ext.io.Group",{extend:"Ext.io.Object",requires:["Ext.cf.messaging.AuthStrategies"],statics:{setCurrent:function(a){this._currentGroup=Ext.create("Ext.io.Group",{id:a._key,data:a.data})},getCurrent:function(b,a){b.call(a,this._currentGroup)},get:function(a,c,b){this.getObject(a.id,c,b)}},getApp:function(b,a){Ext.io.App.getCurrent(b,a)},findUsers:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"query",type:"string"}],arguments,"Ext.io.Group","findUsers")){this.findRelatedObjects(Ext.io.User,null,null,a.query,c,b)}},getUsers:function(b,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Group","getUsers")){this.getRelatedObjects(Ext.io.User,null,b,a)}},getConnectedUsers:function(b,a){Ext.io.Io.getMessagingProxy(function(c){c.getService({name:"PresenceService"},function(d,e){if(d){d.getConnectedUsers(function(f){if(f.status=="success"){var h=[];for(var g=0;g<f.value.length;g++){h.push(Ext.create(Ext.io.User,{id:f.value[g]._key,data:f.value[g].data}))}b.call(a,h)}else{b.call(a,undefined,f.error)}},this.getId())}else{b.call(a,undefined,e)}},this)},this)},register:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"GroupManager"},function(e,f){if(e){e.registerUser(function(g){if(g.status=="success"){Ext.io.User.cacheObjectConfig(g.value._key,g.value);Ext.io.Io.getIdStore().setId("user",g.value._key);Ext.io.Io.getIdStore().setSid("user",g.sid);Ext.io.User.getCurrent(c,b)}else{c.call(b,undefined,g.error)}},{authuser:a,groupId:this.getId(),provider:"senchaio"})}else{c.call(b,undefined,f)}},this)},this)},authenticate:function(a,d,b){if(!Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"provider",type:"string"}],arguments,"Ext.io.Group","authenticate")){return}var c=Ext.cf.messaging.AuthStrategies.strategies[a.provider];if(c){c(this,a,function(e,g,f){if(e){Ext.io.User.cacheObjectConfig(e._key,e);Ext.io.Io.getIdStore().setId("user",e._key);Ext.io.Io.getIdStore().setSid("user",g);Ext.io.User.getCurrent(d,b)}else{d.call(b,e,f)}},this)}else{Ext.cf.util.Logger.error("Unsupported group registration type: "+a.provider+".  Choose a different type from the managment console.")}},recoverPassword:function(a,d,b){if(!Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"email",type:"string",optional:true}],arguments,"Ext.io.Group","recoverPassword")){return}else{if(!a.email){var c=Ext.cf.util.ErrorHelper.get("PARAM_MISSING",null,{name:"email",expected:"email must have a non-null value"});d.call(b,undefined,c);return}Ext.io.Io.getMessagingProxy(function(e){e.getService({name:"GroupManager"},function(f,g){if(f){f.recoverPassword(function(h){if(h.error){d.call(b,undefined,h.error)}else{d.call(b,h.status=="success",undefined)}},this.getId(),a.email)}},this)},this)}},resetPassword:function(a,c,b){if(!Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"email",type:"string"},{name:"code",type:"string"},{name:"newpass",type:"string"}],arguments,"Ext.io.Group","resetPassword")){return}else{Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"GroupManager"},function(e,f){if(e){e.resetPassword(function(g){if(g.error){c.call(b,undefined,g.error)}else{c.call(b,g.status=="success",undefined)}},this.getId(),a.email,a.code,a.newpass)}},this)},this)}},getEnabledAuthMethods:function(f){var b=f?{}:[];var d=this.getData();for(var c in d.auth){var e=d.auth[c];if(e.enabled===true){if(f){b[c]=e}else{var a=Ext.Object.merge(e,{authType:c});b.push(a)}}}return b},findStores:function(a,c,b){this.findRelatedObjects(Ext.io.Store,this.getId(),null,a.query,c,b)},getStores:function(b,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Group","getStores")){this.getRelatedObjects(Ext.io.Store,null,b,a)}}});Ext.define("Ext.io.Sender",{config:{userId:null,deviceId:null,developerId:null},constructor:function(a){this.initConfig(a)},getUser:function(c,b){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Sender","getUser")){var a=this.getUserId();if(!a){c.call(b,null)}else{Ext.io.User.get({id:a},c,b)}}},getDeveloper:function(c,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Sender","getDeveloper")){var b=this.getDeveloperId();if(!b){c.call(a,null)}else{Ext.io.Developer.get({id:b},c,a)}}},getDevice:function(c,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Sender","getDevice")){var b=this.getDeviceId();if(!b){c.call(a,null)}else{Ext.io.Device.get({id:b},c,a)}}},getService:function(e,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Sender","getService")){var b=this.getDeviceId();if(!b){e.call(a,null)}else{var c=b;var d=b.lastIndexOf("-");if(d>-1){c=b.substr(0,d)}Ext.io.Io.getService({name:c},e,a)}}}});Ext.define("Ext.io.Store",{extend:"Ext.io.Object",statics:{get:function(a,c,b){this.getObject(a.id,c,b)}},findReplicas:function(a,c,b){this.findRelatedObjects(Ext.io.Replica,this.getId(),null,a.query,c,b)}});Ext.define("Ext.io.Device",{extend:"Ext.io.Object",mixins:{observable:"Ext.util.Observable"},statics:{find:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"query",type:"string"}],arguments,"Ext.io.Device","find")){Ext.io.App.getCurrent(function(e,d){if(e){e.findDevices(a,c,b)}else{c.call(b,e,d)}})}},getCurrent:function(e,b){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Device","getCurrent")){var d=Ext.io.Io.getIdStore().getId("device");if(!d){var c=Ext.cf.util.ErrorHelper.get("NO_DEVICE_ID");e.call(b,undefined,c)}else{var a=function(f,g){if(f&&f.receive){f.receive()}e.call(b,f,g)};this.getObject(d,a,this)}}},get:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"id",type:"string|number"}],arguments,"Ext.io.Device","get")){this.getObject(a.id,c,b)}}},getApp:function(b,a){this.getRelatedObject(Ext.io.Version,this.getData().version,null,function(c,d){if(d){b.call(a,undefined,d)}else{c.getRelatedObject(Ext.io.App,null,null,b,a)}},this)},getUser:function(b,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Device","getUser")){this.getRelatedObject(Ext.io.User,null,null,b,a)}},send:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"message",type:"string|object"},{name:"expires",type:"number",optional:true}],arguments,"Ext.io.Device","send")){Ext.io.Io.getMessagingProxy(function(d){d.transport.sendToClient(this.getId(),a.message,a.expires,c,b)},this)}},receive:function(b,a){if(b){this.on("message",b,a)}if(!this.subscribedFn){this.subscribedFn=function(d){var c=Ext.create("Ext.io.Sender",{deviceId:d.from,userId:d.userId,developerId:d.developerId});this.fireEvent("message",c,d.msg)};Ext.io.Io.getMessagingProxy(function(c){c.transport.setListener("CourierService",this.subscribedFn,this)},this)}},getVersion:function(b,a){this.getRelatedObject(Ext.io.Version,this.getData().version,null,b,a)}});Ext.define("Ext.io.WithChannel",{getChannelKey:function(c,b){var a=this;if(a._channelKey){c.call(b,a._channelKey)}else{Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"NamingRpcService"},function(f,e){if(f){f.getRelatedObjects(function(g){if(g.status=="success"){if(g.value&&g.value.length){a._channelKey=g.value[0]._key;c.call(b,g.value[0]._key)}}else{c.call(b,undefined,g.error)}},this.$className,this.getId(),"Ext.io.Channel",null)}else{c.call(b,undefined,e)}},this)},this)}}});Ext.define("Ext.io.User",{extend:"Ext.io.Object",requires:["Ext.io.Sender","Ext.io.Store","Ext.io.Device"],mixins:{observable:"Ext.util.Observable",withchannel:"Ext.io.WithChannel"},statics:{register:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"email",type:"string"},{name:"password",type:"string"}],arguments,"Ext.io.User","register")){Ext.io.Group.getCurrent(function(e,d){if(e){e.register(a,c,b)}else{c.call(b,e,d)}})}},authenticate:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope(null,arguments,"Ext.io.User","authenticate")){Ext.io.Group.getCurrent(function(f,e){if(f){var d=function(g,h){if(g){g.receive()}c.call(b,g,h)};f.authenticate(a,d,b)}else{c.call(b,f,e)}})}},find:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"query",type:"string"}],arguments,"Ext.io.User","find")){Ext.io.Group.getCurrent(function(e,d){if(e){e.findUsers(a,c,b)}else{c.call(b,e,d)}})}},getCurrent:function(f,d){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.User","getCurrent")){var a=Ext.io.Io.getIdStore();var b=a.getId("user");var c=a.getSid("user");var e=null;if(!b){e=Ext.cf.util.ErrorHelper.get("NO_CURRENT_USER");f.call(d,undefined,e)}else{if(!c){Ext.io.User.removeCachedObject(b);a.remove("user","id");e=Ext.cf.util.ErrorHelper.get("USER_NOT_AUTHENTICATED");f.call(d,undefined,e)}else{if(this.currentUser){f.call(d,this.currentUser,null)}else{this.getCachedObject(b,function(g,h){if(g){g.receive();g.watch();this.currentUser=g}f.call(d,g,h)},this)}}}}},get:function(a,c,b){this.getObject(a.id,c,b)}},config:{},constructor:function(a){this.initConfig(a);this.mixins.observable.constructor.call(this,a);this.userChannelName="Users/"+this.getId();this.on("updated",function(c,b){if(b&&typeof c.connected=="boolean"){this.fireEvent("connected",c.connected)}},this)},changePassword:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"oldpass",type:"string"},{name:"newpass",type:"string"}],arguments,"Ext.io.User","changePassword")){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"GroupManager"},function(e,f){if(e){e.changePassword(function(g){if(g.error){c.call(b,undefined,g.error)}else{c.call(b,g.status=="success",undefined)}},this.getId(),a.oldpass,a.newpass)}},this)},this)}},getDevices:function(b,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.User","getDevices")){this.getRelatedObjects(Ext.io.Device,null,b,a)}},getGroup:function(b,a){Ext.io.Group.getCurrent(b,a)},send:function(b,d,c){var a=this;if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"message",type:"string|object"},{name:"expires",type:"number",optional:true}],arguments,"Ext.io.User","send")){a.getChannelKey(function(f,e){if(f){Ext.io.Io.getMessagingProxy(function(g){g.pubsub.publish(a.userChannelName,f,b.message,b.expires,d,c)},a)}else{Ext.cf.util.Logger.error("Unable to get user Channel")}})}},receive:function(d,c){var b=this;if(d){b.on("message",d,c)}if(!b.subscribedFn){b.subscribedFn=function a(g,f){var e=Ext.create("Ext.io.Sender",g);b.fireEvent("message",e,f)};b.getChannelKey(function(f,e){if(f){Ext.io.Io.getMessagingProxy(function(g){g.pubsub.subscribe(b.userChannelName,f,b.subscribedFn,b,Ext.emptyFn)},b)}else{Ext.cf.util.Logger.error("Unable to get user Channel")}})}},logout:function(c,b){var a=this;Ext.io.Io.getService({name:"GroupManager"},function(d,e){if(!e&&d){a.getGroup(function(g,f){if(!f&&g){d.logoutUser(function(h,i){if(i){Ext.cf.util.Logger.warn("Group Manager logoutUser failed",i)}a._clearUser(c,b)},{groupId:g.getId()})}else{Ext.cf.util.Logger.warn("Unable to get group for user",f);a._clearUser(c,b)}})}else{Ext.cf.util.Logger.warn("Unable to get GroupManager service",e);a._clearUser(c,b)}},this)},_clearUser:function(b,a){Ext.io.User.currentUser=undefined;this.removeCached();Ext.io.Io.getIdStore().remove("user","sid");Ext.io.Io.getIdStore().remove("user","id");if(b){b.call(a)}},isConnected:function(b,a){Ext.io.Io.getMessagingProxy(function(c){c.getService({name:"PresenceService"},function(d,e){if(d){d.isConnectedUser(function(f){if(f.status=="success"){b.call(a,f.value)}else{b.call(a,undefined,f.error)}},this.getId())}else{b.call(a,undefined,e)}},this)},this)},getStore:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"NamingRpcService"},function(f,e){if(f){f.getStore(function(g){if(g.status=="success"){var h=Ext.create("Ext.io.Store",{id:g.value._key,data:g.value.data});c.call(b,h)}else{c.call(b,undefined,g.error)}},this.getId(),a)}else{c.call(b,undefined,e)}},this)},this)},findStores:function(a,c,b){this.findRelatedObjects(Ext.io.Store,this.getId(),null,a.query,c,b)},getStores:function(b,a){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.User","getStores")){this.getRelatedObjects(Ext.io.Store,null,b,a)}}});Ext.define("Ext.io.Service",{extend:"Ext.io.Object",statics:{get:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"id",type:"string|number"}],arguments,"Ext.io.Service","get")){this.getObject(a.id,c,b)}}},getTeam:function(b,a){this.getRelatedObject(Ext.io.Team,null,null,b,a)}});Ext.define("Ext.io.data.Proxy",{extend:"Ext.data.proxy.Client",alias:"proxy.syncstorage",requires:["Ext.cf.Utilities","Ext.cf.data.SyncProxy","Ext.cf.data.SyncStore","Ext.cf.data.Protocol"],proxyInitialized:false,proxyLocked:true,config:{databaseName:undefined,deviceId:undefined,owner:null,access:null,userId:undefined,groupId:undefined,localSyncProxy:undefined,clock:undefined},constructor:function(c){this.logger=Ext.cf.util.Logger;var d=Ext.cf.util.ParamValidator.validateApi([{name:"config",type:"object",keys:[{name:"id",type:"string"}]}],arguments,"Ext.io.data.Proxy","constructor");this.setDatabaseName(c.id);this.proxyLocked=true;this.proxyInitialized=false;this.initConfig(c);this.callParent([c]);var a=Ext.io.Io.getStoreDirectory();var b=a.get(this.getDatabaseName(),"syncstore");if(b){a.add(this.getDatabaseName(),"syncstore")}},create:function(){var b=arguments;this.with_proxy(function(a){a.create.apply(a,b)},this)},read:function(){var b=arguments;this.with_proxy(function(a){a.read.apply(a,b)},this)},update:function(){var b=arguments;this.with_proxy(function(a){a.update.apply(a,b)},this)},destroy:function(){var b=arguments;this.with_proxy(function(a){a.destroy.apply(a,b)},this)},setModel:function(){var b=arguments;this.with_proxy(function(a){a.setModel.apply(a,b)},this);this.callParent(arguments)},sync:function(a,c,b){if(this.proxyLocked){if(this.storeHasUpdates(a)){if(c){c.call(b,{r:"error",message:"local updates do need to be synched, but a remote sync is currently in progress"})}}else{if(c){c.call(b,{r:"ok",message:"no local updates to sync, and remote sync is already in progress"})}}}else{this.with_proxy(function(d){this.proxyLocked=true;try{var f=a.storeSync();if(f&&(f.added.length+f.updated.length+f.removed.length)>0){a.fireEvent("refresh")}a.removed=[];this.logger.info("Ext.io.data.Proxy.sync: Start sync of database:",this.getDatabaseName());this.protocol.sync(function(e){if(e.r=="ok"){this.setDatabaseDefinitionRemote(true)}this.updateStore(a,e.created,e.updated,e.removed);this.proxyLocked=false;this.logger.info("Ext.io.data.Proxy.sync: End sync of database:",this.getDatabaseName());if(c){c.call(b,e)}},this)}catch(g){this.proxyLocked=false;this.logger.error("Ext.io.data.Proxy.sync: Exception thrown during synchronization");this.logger.error(g);this.logger.error(g.stack);throw g}},this)}},storeHasUpdates:function(b){var d=b.getNewRecords();if(d.length>0){return true}else{var c=b.getUpdatedRecords();if(c.length>0){return true}else{var a=b.getRemovedRecords();return(a.length>0)}}},updateStore:function(c,f,b,d){var g=false;var a,e;if(f&&f.length>0){c.data.addAll(f);c.fireEvent("addrecords",this,f,0);g=true}if(b&&b.length>0){c.data.addAll(b);a=b.length;for(e=0;e<a;e++){c.fireEvent("updaterecord",this,b[e])}g=true}if(d&&d.length>0){a=d.length;for(e=0;e<a;e++){var h=d[e].getId();c.data.removeAt(c.data.findIndexBy(function(j){return j.getId()===h}))}c.fireEvent("removerecords",this,d);g=true}if(g){c.fireEvent("refresh")}},clear:function(){if(this.proxyInitialized){this.proxyLocked=true;this.setDatabaseDefinitionLocal(false);this.remoteProxy.clear(function(){delete this.localProxy;delete this.remoteProxy;delete this.protocol;this.proxyInitialized=false;this.proxyLocked=false},this)}},setDatabaseDefinitionLocal:function(a){Ext.io.Io.getStoreDirectory().update(this.getDatabaseName(),"syncstore",{local:a})},setDatabaseDefinitionRemote:function(a){Ext.io.Io.getStoreDirectory().update(this.getDatabaseName(),"syncstore",{remote:a})},with_proxy:function(b,a){if(this.proxyInitialized){b.call(a,this.remoteProxy)}else{this.createLocalProxy(function(c){this.localProxy=c;this.createRemoteProxy(function(d){this.remoteProxy=d;this.protocol=Ext.create("Ext.cf.data.Protocol",{proxy:this.remoteProxy,owner:this.getOwner(),access:this.getAccess()});Ext.cf.Utilities.delegate(this,this.remoteProxy,["read","update","destroy"]);this.setDatabaseDefinitionLocal(true);this.proxyLocked=false;this.proxyInitialized=true;b.call(a,d)},this)},this)}},createLocalProxy:function(d,a){var b=this.getLocalSyncProxy()||"Ext.cf.data.SyncStore";var c=Ext.create(b);c.asyncInitialize(this.getCurrentConfig(),function(e){if(e.r!=="ok"){this.logger.error("Ext.io.data.Proxy: Unable to create local proxy:",b,e)}d.call(a,c)},this)},createRemoteProxy:function(e,c){var d={databaseName:this.getDatabaseName(),generation:"0"};var b={databaseDefinition:d,replicaDefinition:{replicaId:"0"},store:this.localProxy,clock:this.getClock()};var a=Ext.create("Ext.cf.data.SyncProxy");a.asyncInitialize(b,function(f){if(f.r!=="ok"){this.logger.error("Ext.io.data.Proxy: Unable to create remote proxy:",f)}e.call(c,a)},this)}});Ext.define("Ext.io.data.DirectoryModel",{extend:"Ext.data.Model",config:{identifier:"uuid",fields:[{name:"name",type:"string"},{name:"type",type:"string"},{name:"meta",type:"auto"}]}});Ext.define("Ext.io.data.Directory",{requires:["Ext.data.Store","Ext.io.data.DirectoryModel","Ext.data.Batch"],store:undefined,constructor:function(a){this.store=Ext.create("Ext.data.Store",{model:"Ext.io.data.DirectoryModel",sorters:[{property:"name",direction:"ASC"}],proxy:{id:"ext-io-data-directory",type:"localstorage"},autoLoad:true,autoSync:true})},get:function(b){var a=this.store.find("name",b);if(a==-1){return null}else{return this.store.getAt(a).data}},getAll:function(){var a=this.store.getRange();var c=[];for(var b=0;b<a.length;b++){c[b]=a[b].data}return c},each:function(b,a){this.store.each(function(c){return b.call(a||c.data,c.data)},this)},add:function(a,b,d){var c=Ext.create("Ext.io.data.DirectoryModel",{name:a,type:b,meta:d});this.store.add(c)},update:function(c,d,e){var b=this.store.find("name",c);if(b==-1){this.add(c,d,e)}else{var a=this.store.getAt(b);a.set("type",d);a.set("meta",e)}},remove:function(b){var a=this.store.find("name",b);if(a!=-1){this.store.removeAt(a)}return a}});Ext.setVersion("sio","0.7.10");(function(){var b=Ext.Loader.getPath("Ext.io");if(b){var a=b.substring(0,b.lastIndexOf("/"))+"/cf";Ext.Loader.setPath("Ext.cf",a)}})();Ext.define("Ext.io.Io",{requires:["Ext.util.Observable","Ext.cf.ServiceDefinitions","Ext.cf.Overrides","Ext.cf.messaging.DeviceAllocator","Ext.cf.messaging.Messaging","Ext.cf.util.Logger","Ext.cf.util.ParamValidator","Ext.io.Group","Ext.io.User","Ext.io.App","Ext.io.Device","Ext.io.Channel","Ext.io.Service","Ext.io.data.Proxy","Ext.cf.naming.IDStore","Ext.cf.naming.ConfigStore","Ext.io.data.Directory"],alternateClassName:"Ext.Io",singleton:true,mixins:{observable:"Ext.util.Observable"},config:{url:"https://api.sencha.io",csUrl:"https://api.sencha.io",logLevel:"error",sessionExpiry:365},setup:function(b){if(Ext.cf.util.ParamValidator.validateApi([{name:"options",type:"object",keys:[{name:"appId",type:"string",optional:true},{name:"appSecret",type:"string",optional:true},{name:"url",type:"string",optional:true},{name:"csUrl",type:"string",optional:true},{name:"logLevel",type:"string",optional:true},{name:"sessionExpiry",type:"number",optional:true}]}],arguments,"Ext.io.Io","setup")){Ext.apply(Ext.io.Io.config,b);this.setLogLevel();if(b.trace){var a;for(a in Ext.io){Ext.cf.Utilities.wrapClass(Ext.io[a],"trace",function(c,d){Ext.cf.util.Logger.trace(c.displayName,d)})}}}},callbacks:[],initializing:false,initialized:false,bootupComplete:false,bootupExecuting:false,init:function(f,b){var d=this;this.mixins.observable.constructor.call(this);d.setLogLevel();if(d.initialized){if(f){f.call(b)}else{Ext.cf.util.Logger.warn("Ext.io.Io.init can be called without a callback, but calls made into Ext.io before init has completed, may fail.")}return}if(f){d.callbacks.push([f,b])}else{Ext.cf.util.Logger.warn("A call to Ext.io.Io.init is already in progress. It's better to always provide a init with a callback, otherwise calls into Ext.io may fail.")}if(d.initializing){return}d.initializing=true;this.initDeveloper();this.initUser();var a=Ext.io.Io.getIdStore();Ext.io.Io.config.url=a.stash("api","server",Ext.io.Io.config.url);var e=this.initApp();var c=this.initDevice();if(e&&c.deviceId&&c.deviceSid){Ext.cf.util.Logger.debug("App has app id, and device id checking chache for objects.",e,c.deviceId,c.deviceSid);this.restoreConfig(e,c)}else{Ext.cf.util.Logger.debug("device id, or device session id missing, can't start offline, must complete online bootup",e,c.deviceId,c.deviceSid);d.bootup()}},setLogLevel:function(a){Ext.cf.util.Logger.setLevel(a?a:Ext.io.Io.config.logLevel)},bootup:function(){var a=Ext.io.Io.getIdStore();var d=a.getId("app");var c=a.getId("device");var b=a.getSid("device");if(this.bootupComplete===true||this.bootupExecuting===true){return}this.bootupExecuting=true;Ext.cf.messaging.DeviceAllocator.bootup({url:Ext.io.Io.config.url,appId:d,authDevice:true,deviceId:c,deviceSid:b},Ext.bind(this._onBootup,this))},restoreConfig:function(f,d){var c=this.getConfigStore();var a=c.getObjectConfig("currentApp");var e=c.getObjectConfig("currentGroup");if(a){Ext.cf.util.Logger.debug("using cached app and group",a,e);Ext.io.App.setCurrent(a);if(e){Ext.io.Group.setCurrent(e)}var b=this;this.initMessaging(function(){b.onInitComplete()})}},_onBootup:function(d){var c=this;c.bootupComplete=true;this.bootupExecuting=false;var f=this.getConfigStore();Ext.cf.util.Logger.debug("bootup request complete",d);if(d.status==="success"){var b=Ext.io.Io.getIdStore();var a=d.result;if(a.checkVersion&&a.checkVersion.code==="INCOMPATIBLE_VERSIONS"){Ext.cf.util.Logger.error(a.checkVersion);throw a.checkVersion.message}c.registerDevice(a.device);if(a.objects){if(a.objects.group&&a.objects.group.value&&a.objects.group.status=="success"){b.setId("group",a.objects.group.value.id);f.setObjectConfig("currentGroup",a.objects.group.value);Ext.io.Group.setCurrent(a.objects.group.value)}if(a.objects.app&&a.objects.app.value&&a.objects.app.status=="success"){f.setObjectConfig("currentApp",a.objects.app.value);Ext.io.App.setCurrent(a.objects.app.value)}}c.initMessaging(function(){c.onInitComplete()})}else{var e="Client bootup failed due to "+(d.error.code==="NETWORK_ERROR"?"network":"server")+" error";this.initialized=false;this.initializing=false;c.fireEvent("offline");Ext.cf.util.Logger.error(e,d.error)}},onInitComplete:function(){this.initialized=true;this.initializing=false;var b;for(var a=0;a<this.callbacks.length;a++){b=this.callbacks[a];if(b){b[0].call(b[1])}}this.callbacks=[]},initDeveloper:function(){var a=Ext.io.Io.getIdStore();a.stash("developer","id")},initApp:function(){var a=Ext.io.Io.getIdStore();var d=a.getId("app");var c=a.getCookieStore().getItem("app.id");var b=Ext.io.Io.config.appId;if(!this.verifyAppId(d,b,c)){Ext.cf.util.Logger.warn("AppId has changed from saved app Id");this.nukeStoredIds()}d=a.stash("app","id",b);if(!d){Ext.cf.util.Logger.error("Could not find App Id.");Ext.cf.util.Logger.error("The App Id is either provided by senchafy.com when the App is served, or can be passed through Ext.Io.setup({appId:id})")}return d},nukeStoredIds:function(){var a=Ext.io.Io.getIdStore();a.remove("device","id");a.remove("device","sid");a.remove("group","id");a.remove("user","sid")},verifyAppId:function(c,a,b){return(b&&b==c)||(!b&&c==a)},initDevice:function(){var a=Ext.io.Io.getIdStore();var b;var c;if(this.config.deviceId){a.setId("device",this.config.deviceId);if(this.config.deviceSid){a.setSid("device",this.config.deviceSid)}Ext.cf.util.Logger.debug("Ext.Io.setup provided the device id",this.config.deviceId);c=this.config.deviceId;b=this.config.deviceSid}else{c=a.getId("device");b=a.getSid("device")}return{deviceId:c,deviceSid:b}},initMessaging:function(d,c){var b=this;if(!Ext.io.Io.messaging){this.fireEvent("connecting");var a=Ext.io.Io.getIdStore();this.config.deviceId=a.getId("device");this.config.deviceSid=a.getSid("device");Ext.io.Io.messaging=Ext.create("Ext.cf.messaging.Messaging",this.config);Ext.io.Io.messaging.transport.on("invalidsession",function(e){Ext.cf.util.Logger.error("Invalid Session, will attempt to re-authorize",e);b.bootupComplete=false;b.bootup()});Ext.io.Io.messaging.transport.on("connected",function(e){b.fireEvent("online",e)})}else{Ext.io.Io.messaging.transport.start()}b.bootup();b.receiveNamingEvents();d.call(c)},initUser:function(){var a=Ext.io.Io.getIdStore();a.stash("user","id")},registerDevice:function(f){var b=this;var a=Ext.io.Io.getIdStore();var g=null;var e=null;if(f.authenticate&&!f.authenticate.error){e=f.authenticate.result;a.setSid("device",e)}else{if(f.register&&!f.register.error){g=f.register.result.deviceId;e=f.register.result.deviceSid;a.setId("device",g);a.setSid("device",e)}else{var d=f.register.error;var c="Registering device failed. "+d.code+": "+d.message;Ext.cf.util.Logger.error("registerDevice",c,d);throw c}}},idStore:undefined,getIdStore:function(){Ext.io.Io.idStore=Ext.io.Io.idStore||Ext.create("Ext.cf.naming.IDStore",{sessionExpiry:Ext.io.Io.config.sessionExpiry});return Ext.io.Io.idStore},getConfigStore:function(){Ext.io.Io.configStore=Ext.io.Io.configStore||Ext.create("Ext.cf.naming.ConfigStore");return Ext.io.Io.configStore},messaging:undefined,getMessagingProxy:function(b,a){if(Ext.io.Io.messaging){b.call(a,Ext.io.Io.messaging)}else{Ext.io.Io.init(function(){b.call(a,Ext.io.Io.messaging)},this)}},storeDirectory:undefined,getStoreDirectory:function(){Ext.io.Io.storeDirectory=Ext.io.Io.storeDirectory||Ext.create("Ext.io.data.Directory",{});return Ext.io.Io.storeDirectory},getService:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"name",type:"string"}],arguments,"Ext.io.Io","getService")){if(Ext.io.Io.messaging){Ext.io.Io.messaging.getService(a,c,b)}else{Ext.io.Io.init(function(){Ext.io.Io.messaging.getService(a,c,b)})}}},registeredNamingObjects:{},registerForNamingEvents:function(c,b){var a=this;if(c.getId()){a.registeredNamingObjects[c.getId()]=c;a._on(c.$className,c.getId(),"update",b||null,function(d){if(d){Ext.cf.util.Logger.error("registerForNamingEvents","Registering for naming events with server failed",d)}},this)}},unregisterForNamingEvents:function(c,b){var a=this;if(c.getId()){delete a.registeredNamingObjects[c.getId()];a._un(c.$className,c.getId(),"update",b||null,function(d){if(d){Ext.cf.util.Logger.error("registerForNamingEvents","Registering for naming events with server failed",d)}},this)}},fireNamingEvent:function(b,a){if(this.registeredNamingObjects[b]){this.registeredNamingObjects[b]._update(a,true)}},receiveNamingEvents:function(){if(!this.subscribedEventFn){this.subscribedEventFn=function(b){var a=b.msg;this.fireNamingEvent(a.objectId,a.data)};Ext.io.Io.getMessagingProxy(function(a){a.transport.setListener("NamingEventService",this.subscribedEventFn,this)},this)}},_on:function(a,f,c,b,e,d){this._sendNamingEventMessage("on",a,f,c,b,e,d)},_un:function(a,f,c,b,e,d){this._sendNamingEventMessage("un",a,f,c,b,e,d)},_sendNamingEventMessage:function(g,a,f,c,b,e,d){Ext.io.Io.getMessagingProxy(function(h){var i={op:g,klass:a,id:f,eventName:c,attributes:b};h.transport.sendToService("NamingEventService",i,function(){Ext.cf.util.Logger.debug("Sent message to NamingEventService",i)},d)},d)}});Ext.define("Ext.io.auth.Base",{config:{loginView:"Ext.io.ux.AuthSencha",authButtonConfig:{authType:"sio",text:"Sencha"},initComplete:false},constructor:function(a){this.initConfig(a)},init:function(b,c,a){this.setInitComplete(true);c.call(a)},checkAuth:function(b,c,a){c.call(a,false,{})},onAuth:function(b,c,a){c.call(a,{})},logout:function(b,a){b.call(a)},saveCurrentPath:function(){Ext.io.Io.getIdStore().setId("auth.preurl",document.location.href)},restorePreviousPath:function(){var a=Ext.io.Io.getIdStore().getId("auth.preurl");if(a){history.replaceState({},"",a);Ext.io.Io.getIdStore().remove("auth.preurl")}}});Ext.define("Ext.io.auth.Facebook",{extend:"Ext.io.auth.Base",config:{loginView:"Ext.io.ux.AuthFacebook",authButtonConfig:{authType:"fb",text:"Facebook"},initComplete:false},constructor:function(a){this.initConfig(a)},checkAuth:function(d,e,a){var c=Ext.Object.fromQueryString(document.location.search);var b=c.code;if(b){e.call(a,true,{provider:"facebook",callbackPath:this.getCallbackPath(),query:{code:b}})}else{e.call(a,false,{})}},getCallbackPath:function(){return window.location.protocol+"//"+window.location.host+window.location.pathname},onAuth:function(b,c,a){this.restorePreviousPath();c.call(a,b)},logout:function(b,a){}});Ext.define("Ext.io.auth.Twitter",{extend:"Ext.io.auth.Base",config:{loginView:"Ext.io.ux.AuthTwitter",authButtonConfig:{authType:"twitter",text:"Twitter"},oauthUrl:"",initComplete:false},constructor:function(a){this.initConfig(a)},init:function(d,e,c){if(this.getInitComplete()){e.call(c)}var a={groupId:d.getId(),provider:"twitter",callbackPath:this.getCallbackPath()};var b=Ext.bind(function(f){this.setOauthUrl(f.returnuri);this.setInitComplete(true);e.call(c)},this);Ext.io.Io.getMessagingProxy(function(f){f.getService({name:"GroupManager"},function(g,h){if(g){g.loginUser(b,a)}else{e.call(c,h)}},this)},this)},getCallbackPath:function(){return document.location.href},checkAuth:function(e,f,b){var c=Ext.Object.fromQueryString(document.location.search);var a=c.oauth_token;var d=c.oauth_verifier;if(a){f.call(b,true,{provider:"twitter",callbackPath:this.getCallbackPath(),oauth:{token:a,verifier:d}})}else{f.call(b,false,{})}},onAuth:function(b,c,a){this.restorePreviousPath();c.call(a,b)},logout:function(b,a){b.call(a,true,{})}});if(!Ext.getVersion("extjs")){Ext.define("Ext.io.ux.RecoverCodePanel",{extend:"Ext.Panel",requires:["Ext.Button"],config:{control:{"button[action=sioResetPassword]":{tap:"resetPassword"}},recoveryId:"",title:"Recovery Code",left:0,top:0,modal:true,hideOnMaskTap:true,hidden:true,width:Ext.os.deviceType=="Phone"?260:400,height:300,layout:"fit",items:[{xtype:"formpanel",items:[{html:"Check your email for a recovery code:"},{xtype:"fieldset",items:[{xtype:"textfield",placeHolder:"Code",name:"code"},{xtype:"passwordfield",placeHolder:"New Password",name:"password"},{xtype:"button",text:"Reset Password",width:"80%",action:"sioResetPassword",ui:"action",margin:"10",align:"center"}]}]}]},resetPassword:function(){var c=this.query(".formpanel")[0];Ext.Viewport.setMasked({xtype:"loadmask",message:"Verifying...",indicator:true});var a=c.getValues();var b=a.code;var d=a.password;Ext.io.Group.getCurrent(function(e){if(e){e.resetPassword({email:this.getRecoveryId(),code:b,newpass:d},function(g,f){Ext.Viewport.setMasked(false);if(g){Ext.Msg.alert("Password","Password Reset",Ext.bind(function(){this.fireEvent("passwordrest")},this));this.hide()}else{Ext.Msg.alert("Error",f.message,Ext.emptyFn)}},this)}},this)}})}if(!Ext.getVersion("extjs")){Ext.define("Ext.io.ux.AuthSencha",{extend:"Ext.Container",requires:["Ext.TitleBar","Ext.MessageBox","Ext.form.Panel","Ext.form.FieldSet","Ext.field.Password","Ext.field.Email","Ext.io.ux.RecoverCodePanel"],config:{layout:"fit",fullscreen:true,control:{"button[action=siologin]":{tap:"doAuth"},"button[action=showRegister]":{tap:"showRegister"},"button[action=sioRegister]":{tap:"doRegister"},"button[action=cancellogin]":{tap:"hideLogin"},"button[action=sioRecover]":{tap:"showRecoverPanel"},"button[action=sioRecoverShowCode]":{tap:"showRecoverCodePanel"}},items:[{docked:"top",xtype:"titlebar",title:"Login",items:[{text:"cancel",action:"cancellogin"},{text:"register",action:"showRegister",align:"right"}]},{xtype:"panel",layout:"card",items:[{xtype:"formpanel",items:[{xtype:"fieldset",defaults:{margin:"10"},items:[{xtype:"emailfield",placeHolder:"Email",name:"email"},{xtype:"passwordfield",placeHolder:Ext.io.ux.Strings.LABEL_PASSWORD,name:"password"},{xtype:"button",text:"Login",align:"center",action:"siologin"},{xtype:"button",text:"Register",action:"sioRegister",align:"center",hidden:"true"},{xtype:"button",text:"Recover Password",action:"sioRecover",align:"center"}]}]}]}]},resetForm:function(){this.showLoginPanel();this.setMasked(false);var a=this.getForm();a.reset()},doAuth:function(){this.setMasked({xtype:"loadmask",message:"Authorizing",indicator:true});var b=this.getForm();var a=b.getValues();a.provider="senchaio",this.fireEvent("loginUser",a)},showLoginErrors:function(){this.setMasked(false);Ext.Msg.alert("Login Error","Invalid email or passsword",Ext.emptyFn)},doRegister:function(){this.setMasked({xtype:"loadmask",message:"Creating Account",indicator:true});var b=this.getForm();var a=b.getValues();this.fireEvent("registerUser",a)},recoverPassword:function(){this.setMasked({xtype:"loadmask",message:"Sending Recovery Email",indicator:true});var d=this.getForm();var b=d.getValues();var c=b.email;var a={};a.email=c;Ext.io.Group.getCurrent(function(e){if(e){e.recoverPassword(a,function(g,f){this.setMasked(false);if(g){this.showRecoverCodePanel(c)}else{Ext.Msg.alert("Error",f.message,Ext.emptyFn)}},this)}},this)},showRecoverResults:function(){this.setMasked(false);Ext.Msg.alert("Login Error","Invalid email or passsword",Ext.emptyFn)},showRegister:function(){this.showLoginPanel();this.mode="register";var a=this.getEmailField();a.show();this.getRegisterBtn().show();this.getLoginBtn().hide()},showRegisterErrors:function(a){this.setMasked(false);Ext.Msg.alert("Register Error","Could not create user",Ext.emptyFn)},showLoginPanel:function(){this.mode="login";this.getPasswordField().show();this.getRegisterBtn().hide();this.getLoginBtn().show()},showRecoverPanel:function(){if(this.mode=="recover"){this.recoverPassword()}this.mode="recover";this.getPasswordField().hide();this.getRegisterBtn().hide();this.getLoginBtn().hide()},showRecoverCodePanel:function(a){if(!this.recoverPanel){this.recoverPanel=Ext.create("Ext.io.ux.RecoverCodePanel",{});this.recoverPanel.on("passwordrest",this.onPasswordReset,this);Ext.Viewport.add(this.recoverPanel)}this.recoverPanel.setRecoveryId(a);this.recoverPanel.showBy(this.getRecoverBtn())},onPasswordReset:function(){this.showLoginPanel()},hideLogin:function(){this.fireEvent("cancel")},getForm:function(){return this.query(".formpanel")[0]},getEmailField:function(){return this.query(".emailfield")[0]},getPasswordField:function(){return this.query(".passwordfield")[0]},getRegisterBtn:function(){return this.query("button[action=sioRegister]")[0]},getLoginBtn:function(){return this.query("button[action=siologin]")[0]},getRecoverBtn:function(){return this.query("button[action=sioRecover]")[0]},getRecoveryCodeBtn:function(){return this.query("button[action=sioRecoverShowCode]")[0]}})}if(!Ext.getVersion("extjs")){Ext.define("Ext.io.ux.AuthFacebook",{extend:"Ext.Container",requires:["Ext.TitleBar","Ext.form.Panel","Ext.form.FieldSet","Ext.field.Password","Ext.field.Email"],config:{fullscreen:true,control:{"button[action=cancellogin]":{tap:"hideLogin"}},items:[{docked:"top",xtype:"titlebar",title:"Login",items:[{text:"cancel",action:"cancellogin"}]},{xtype:"panel",html:"To use this application please sign in with your Facebook account.",padding:"10",align:"center"},{xtype:"button",text:"Login with Facebook",disabled:true,width:"80%",action:"fblogin",ui:"action",margin:"10",align:"center"}]},loginButtonTapped:function(a){console.log("argum",arguments);a.setDisabled(true);this.setMasked({xtype:"loadmask",message:"Loading Facebook",indicator:true});this.config.controller.saveCurrentPath();document.location.href=this.redirectUrl},initialize:function(){var b=this.config.group.getData().auth.fb;var c=b.appId;this.redirectUrl="https://m.facebook.com/dialog/oauth?"+Ext.Object.toQueryString({redirect_uri:window.location.protocol+"//"+window.location.host+window.location.pathname,client_id:c,response_type:"code",bustCache:new Date().getTime()});var a=this.query("button[action=fblogin]")[0];if(a){a.on({tap:this.loginButtonTapped,scope:this});a.setDisabled(false)}else{console.error("Could not find a button[action=fblogin] in the AuthFacebook view.  User won't be able to login.")}},resetForm:function(){},showLoginErrors:function(){},hideLogin:function(){this.fireEvent("cancel")}})}if(!Ext.getVersion("extjs")){Ext.define("Ext.io.ux.AuthTwitter",{extend:"Ext.Container",requires:["Ext.TitleBar","Ext.form.Panel","Ext.form.FieldSet","Ext.field.Password","Ext.field.Email"],config:{fullscreen:true,control:{"button[action=cancellogin]":{tap:"hideLogin"},"button[action=twlogin]":{tap:"loginButtonTapped"}},items:[{docked:"top",xtype:"titlebar",title:"Login",items:[{text:"cancel",action:"cancellogin"}]},{xtype:"panel",html:"To use this application please sign in with your Twitter account.",padding:"10",align:"center"},{xtype:"button",text:"Login with Twitter",action:"twlogin",width:"80%",ui:"action",margin:"10",align:"center"}]},loginButtonTapped:function(a){a.setDisabled(true);this.redirectUrl=this.config.controller.getOauthUrl();this.setMasked({xtype:"loadmask",message:"Loading Twitter",indicator:true});this.config.controller.saveCurrentPath();document.location.href=this.redirectUrl},initialize:function(a){},resetForm:function(){},showLoginErrors:function(){},hideLogin:function(){this.fireEvent("cancel")}})}if(!Ext.getVersion("extjs")){Ext.define("Ext.io.ux.ChooseAuth",{extend:"Ext.Container",xtype:"sioChooseAuth",requires:["Ext.TitleBar","Ext.form.Panel","Ext.form.FieldSet","Ext.field.Password","Ext.field.Email"],config:{layout:"fit",fullscreen:true,authMethods:[],control:{"button[action=sioCancelChooseLogin]":{tap:"doCancelAuth"}},items:[{docked:"top",xtype:"titlebar",title:"Login",items:[{text:"cancel",action:"sioCancelChooseLogin"}]},{xtype:"panel",id:"sioAuthChooser",defaults:{xtype:"button",width:"80%",ui:"action",margin:"10",align:"center"},items:[{xtype:"panel",html:"Choose Login Type"}]}]},initialize:function(){var a=this.getAuthMethods();this.buttonPanel=this.query("#sioAuthChooser")[0];if(!a||a.length<=0){return}a.forEach(Ext.bind(this.createButton,this))},createButton:function(b){var a=Ext.create(b.buttonType?b.buttonType:"Ext.Button",b);a.on("tap",function(c){this.doAuth(c,b)},this);this.buttonPanel.add(a)},doCancelAuth:function(a){this.fireEvent("cancel")},doAuth:function(a,b){this.fireEvent("authMethod",b)}})}if(!Ext.getVersion("extjs")){Ext.define("Ext.io.ux.ChangePassword",{extend:"Ext.Panel",requires:["Ext.TitleBar","Ext.form.Panel","Ext.form.FieldSet","Ext.field.Password","Ext.field.Email","Ext.io.ux.RecoverCodePanel"],config:{control:{"button[action=sioChangePassword]":{tap:"onChangePassword"}},title:"Change Password",left:0,top:0,modal:true,hideOnMaskTap:true,hidden:true,width:Ext.os.deviceType=="Phone"?260:400,height:300,layout:"card",items:[{xtype:"formpanel",items:[{html:Ext.io.ux.Strings.LABEL_CHANGE_PASSWORD},{xtype:"fieldset",items:[{xtype:"passwordfield",placeHolder:Ext.io.ux.Strings.LABEL_OLD_PASSWORD,name:"oldpassword"},{xtype:"passwordfield",placeHolder:Ext.io.ux.Strings.LABEL_NEW_PASSWORD,name:"newpassword"},{xtype:"button",text:Ext.io.ux.Strings.CHANGE_PASSWORD_BUTTON,width:"80%",action:"sioChangePassword",ui:"action",margin:"10",align:"center"}]}]}]},getForm:function(){return this.query(".formpanel")[0]},onChangePassword:function(){this.setMasked({xtype:"loadmask",message:Ext.io.ux.Strings.CHANGE_PASSWORD_MASK,indicator:true});var a=this.getForm();var b=a.getValues();Ext.io.User.getCurrent(function(c){if(c){c.changePassword({oldpass:b.oldpassword,newpass:b.newpassword},function(e,d){this.setMasked(false);if(e){Ext.Msg.alert(Ext.io.ux.Strings.MSGBOX_PASSWORD_TITLE,Ext.io.ux.Strings.CHANGE_PASSWORD_SUCCESS,Ext.emptyFn);this.hide()}else{Ext.Msg.alert(Ext.io.ux.Strings.MSGBOX_ERROR_TITLE,d.message,Ext.emptyFn)}},this)}},this)}})}Ext.define("Ext.io.Controller",{extend:"Ext.app.Controller",requires:["Ext.io.ux.Strings","Ext.io.Io","Ext.io.User","Ext.io.auth.Facebook","Ext.io.auth.Twitter","Ext.io.ux.AuthSencha","Ext.io.ux.AuthFacebook","Ext.io.ux.AuthTwitter","Ext.io.ux.ChooseAuth","Ext.io.ux.ChangePassword"],config:{authenticationView:"Ext.io.ux.AuthSencha",chooseAuthView:"Ext.io.ux.ChooseAuth",ioInitComplete:false,launchComplete:false,control:{authButton:{tap:"authButtonTap"}},refs:{authButton:".sioAuthButton"}},init:function(){var a=this.getApplication().config.io;a.authOnStartup=a.authOnStartup==undefined?true:a.authOnStartup;a.manualLogin=a.manualLogin==undefined?false:a.manualLogin;this.ioConf=a;this.getApplication().sio=this;this.setupIo(a)},setupIo:function(){Ext.Io.setup(this.ioConf);this.setupButtonEvents();var a=this;Ext.Io.init(function(){a.afterIoInit()})},afterIoInit:function(){var a=this;a.addAuthMethod("sio","Ext.io.auth.Base");a.addAuthMethod("fb","Ext.io.auth.Facebook");a.addAuthMethod("twitter","Ext.io.auth.Twitter");a.setIoInitComplete(true);if(this.ioConf.authOnStartup){a.auth()}a.channels={};a.setupChannels();a.fireEvent("ioInitComplete")},setupButtonEvents:function(){this.on({checkingAuth:this.updateButtonDisable,authorized:this.updateButtonLogin,registered:this.updateButtonLogin,nouser:this.updateButtonLogout,logout:this.updateButtonLogout,scope:this})},setupChannels:function(){var a=this.getApplication();if(a.channels){a.channels=this.getFullyQualified(a.channels,"channel");Ext.require(a.channels,this.onDependenciesLoaded,this)}},onDependenciesLoaded:function(){var f=this.getApplication();if(f.channels){for(var c=0,a=f.channels.length;c<a;c++){var e=f.channels[c];var d=Ext.create(e,{});if(d){var b=d.getName();if(this.channels[b]){Ext.cf.util.Logger.warn("Ext.io.Controller: Found more than channel with the same name",b,d,this.channels[b])}else{this.channels[b]=d}}}this.fireEvent("channelsReady",this.channels)}},getChannel:function(a){return this.channels[a]},updateButtonDisable:function(){var a=this.getAuthButton();if(a){this.getAuthButton().setDisabled(true);this.getAuthButton().setText("---")}return true},updateButtonLogin:function(){var a=this.getAuthButton();if(a){this.getAuthButton().setDisabled(false);this.getAuthButton().setText("Logout")}return true},updateButtonLogout:function(){var a=this.getAuthButton();if(a){this.getAuthButton().setDisabled(false);this.getAuthButton().setText("Login")}return true},authButtonTap:function(){this.getUser(function(a,b){if(a){this.logout()}else{this.login()}})},launch:function(){this.setLaunchComplete(true);this.auth()},auth:function(){if(this.getLaunchComplete()&&this.getIoInitComplete()){this.login(!this.getApplication().config.io.manualLogin)}},login:function(a){if(Ext.cf.util.ParamValidator.validateApi([{name:"showLoginIfNoAuth",type:"boolean",optional:true}],arguments,"Ext.io.Controller","login")){this.checkAuth(a)}},checkAuth:function(a){this.fireEvent("checkingAuth");this.getGroup(function(e){if(!e){Ext.cf.util.Logger.error("Ext.io.Controller: Cannot login, application does not have a group.");return}this.group=e;var b=e.getEnabledAuthMethods();var d=Ext.io.Io.getIdStore().getId("authMethod");if(d){this.setAuthController(d)}else{if(b){if(b.length==1){var c=b[0].authType;this.setAuthController(c)}}}this.enabledMethods=b;this.getUser(function(g){var h=function(j,i){if(j&&g){this.onAuth(g)}else{if(j&&i){this.authController.onAuth(i,this.onLoginUser,this)}else{this.fireEvent("nouser");if(a!==false){this.showLogin()}}}};var f=function(){this.authController.checkAuth(this.group,h,this)};if(g){this.onAuth(g)}else{if(this.authController){this.authController.init(this.group,f,this)}else{this.fireEvent("nouser");if(a!==false){this.showLogin()}}}})})},onAuth:function(a){this.user=a;a.on("message",function(c,d){var b=c.getUserId();this.fireEvent("usermessage",c,d)},this);this.hideLoginPanel();this.fireEvent("authorized",a)},showLogin:function(a){if(!this.previousActiveItem){this.previousActiveItem=Ext.Viewport.getActiveItem()}if(!this.loginContainer){this.loginContainer=Ext.create("Ext.Panel",{layout:"card"})}Ext.Viewport.setActiveItem(this.loginContainer);if(!this.authController){this.showChooseLogin(this.enabledMethods);return}if(!this.loginPanel){this.createLogin()}else{if(a!==true){this.loginPanel.resetForm()}}this.loginContainer.setActiveItem(this.loginPanel)},showChooseLogin:function(c){this.setAuthController(null);if(!this.chooseLoginPanel){var d=[];for(var e=0,a=c.length;e<a;e++){var b=c[e];var f=this.authMethods[b.authType];if(!f){console.error("Group has method",b,"with out a loaded controller")}else{d.push(f.getAuthButtonConfig())}}this.chooseLoginPanel=Ext.create(this.getChooseAuthView(),{authMethods:d});this.loginContainer.add(this.chooseLoginPanel);this.chooseLoginPanel.on({cancel:this.hideLoginPanel,authMethod:this.chooseAuthMethod,scope:this})}this.loginContainer.setActiveItem(this.chooseLoginPanel)},chooseAuthMethod:function(a){this.setAuthController(a.authType);this.showLogin()},setAuthController:function(a){console.log("setAuthController",a);this.authController=this.authMethods[a];if(this.authController){Ext.io.Io.getIdStore().setId("authMethod",a);this.setAuthenticationView(this.authController.getLoginView());this.authController.init(this.group,function(){console.log("Auth init",a,arguments)},this)}else{this.setAuthenticationView(null);Ext.io.Io.getIdStore().remove("authMethod","id");if(this.loginPanel){this.loginPanel.destroy();delete this.loginPanel}}},createLogin:function(){if(!this.loginPanel){this.loginPanel=Ext.create(this.getAuthenticationView(),{group:this.group,controller:this.authController});this.loginPanel.on({loginUser:this.onLoginUser,cancel:this.chooseLoginPanel?this.showChooseLogin:this.hideLoginPanel,registerUser:this.registerUser,scope:this});this.loginContainer.add(this.loginPanel)}},onLoginUser:function(a){Ext.io.User.authenticate(a,function(b,c){if(b){this.onAuth(b)}else{this.showLogin(true);this.loginPanel.showLoginErrors()}},this)},registerUser:function(a){if(a.email.length>0&&a.password.length>0){Ext.io.User.register({email:a.email,password:a.password},function(b,c){if(b){this.hideLoginPanel();this.fireEvent("registered",b);this.onAuth(b)}else{this.loginPanel.showRegisterErrors(c)}},this)}else{this.loginPanel.showRegisterErrors({error:"missing fields"})}},hideLoginPanel:function(){this.setAuthController();if(this.previousActiveItem){Ext.Viewport.setActiveItem(this.previousActiveItem);delete this.previousActiveItem}},logout:function(){this.setAuthController();this.getUser(function(a){if(a){a.logout();this.logoutExternal()}this.fireEvent("logout")})},logoutExternal:function(){if(this.authMethod&&this.authMethod.logout){this.authMethod.logout()}},getUser:function(b,a){if(!b){return}a=a||this;b=b||Ext.emptyFn;Ext.io.User.getCurrent(function(c,d){b.call(a,c,d)})},getGroup:function(b,a){if(!b){return}a=a||this;b=b||Ext.emptyFn;Ext.io.Group.getCurrent(function(c,d){b.call(a,c,d)})},isConected:function(){return true},addAuthMethod:function(a,b){Ext.cf.util.Logger.debug("Ext.io.Controller setting auth method",a,b);var c=Ext.create(b,{controller:this});this.authMethods[a]=c},authMethods:{}});Ext.define("Ext.io.Developer",{extend:"Ext.io.Object",requires:["Ext.io.Sender","Ext.cf.util.Md5","Ext.cf.util.ErrorHelper"],mixins:{observable:"Ext.util.Observable",withchannel:"Ext.io.WithChannel"},statics:{authenticate:function(b,d,c){var a=this;Ext.io.Io.getService({name:"TeamManager"},function(e,f){if(e){e.authenticate(function(g){if(g.status=="success"){var h=Ext.create("Ext.io.Developer",{id:g.value._key,data:g.value.data});Ext.io.Io.getIdStore().setSid("developer",g.session.sid);Ext.io.Io.getIdStore().setId("developer",g.value._key);d.call(c,h)}else{d.call(c,undefined,g.error)}},{username:b.username,password:b.password,provider:"sencha"})}else{d.call(c,undefined,f)}},this)},getCurrent:function(f,c){if(Ext.cf.util.ParamValidator.validateCallbackScope(arguments,"Ext.io.Developer","getCurrent")){var b=Ext.io.Io.getIdStore();var e=b.getId("developer");var a=b.getSid("developer");if(!e||!a){var d=Ext.cf.util.ErrorHelper.get("DEVELOPER_NOT_LOGGED_IN");f.call(c,undefined,d)}else{this.getObject(e,function(h,g){if(h){h.receive()}f.call(c,h,g)},this)}}},get:function(a,c,b){this.getObject(a.id,c,b)}},constructor:function(a){this.initConfig(a);this.mixins.observable.constructor.call(this,a);if(Ext.getVersion("extjs")){this.mixins.observable.constructor.call(this,a)}this.developerChannelName="Developers/"+this.getId()},send:function(b,d,c){var a=this;if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"message",type:"string|object"},{name:"expires",type:"number",optional:true}],arguments,"Ext.io.Developer","send")){a.getChannelKey(function(f,e){if(f){Ext.io.Io.getMessagingProxy(function(g){g.pubsub.publish(a.developerChannelName,f,b.message,b.expires,d,c)},a)}else{Ext.cf.util.Logger.error("Unable to get developer Channel")}})}},receive:function(d,c){var b=this;if(d){b.on("message",d,c)}if(!b.subscribedFn){b.subscribedFn=function a(g,f){var e=Ext.create("Ext.io.Sender",g);b.fireEvent("message",e,f)};b.getChannelKey(function(f,e){if(f){Ext.io.Io.getMessagingProxy(function(g){g.pubsub.subscribe(b.developerChannelName,f,b.subscribedFn,b,Ext.emptyFn)},b)}else{Ext.cf.util.Logger.error("Unable to get developer Channel")}})}},getTeams:function(b,d,c){var a=(typeof(b.owner)!="undefined")?((b.owner==="owner")?"owner":"member"):null;this.getRelatedObjects(Ext.io.Team,a,d,c)},createTeam:function(a,c,b){this.createRelatedObject("createTeam",Ext.io.Team,a,c,b)},logout:function(c,b){var a=this;Ext.io.Io.getService({name:"TeamManager"},function(e,d){if(!d&&e){e.logoutDeveloper(function(f,g){if(g){Ext.cf.util.Logger.warn("Team Manager logoutDeveloper failed",g)}a._clearDeveloper(c,b)})}else{Ext.cf.util.Logger.warn("Unable to get TeamManager service",d);a._clearDeveloper(c,b)}},this)},_clearDeveloper:function(b,a){Ext.io.Io.getIdStore().remove("developer","sid");Ext.io.Io.getIdStore().remove("developer","id");if(b){b.call(a)}},isConnected:function(b,a){Ext.io.Io.getMessagingProxy(function(c){c.getService({name:"PresenceService"},function(d,e){if(d){d.isConnectedDeveloper(function(f){if(f.status=="success"){b.call(a,f.value)}else{b.call(a,undefined,f.error)}},this.getId())}else{b.call(a,undefined,e)}},this)},this)}});Ext.define("Ext.io.Replica",{extend:"Ext.io.Object",statics:{get:function(a,c,b){this.getObject(a.id,c,b)}}});Ext.define("Ext.io.Team",{extend:"Ext.io.Object",mixins:{withpicture:"Ext.io.WithPicture"},statics:{get:function(a,c,b){this.getObject(a.id,c,b)}},createApp:function(a,c,b){this.createRelatedObject("createApp",Ext.io.App,a,c,b)},createGroup:function(a,c,b){this.createRelatedObject("createGroup",Ext.io.Group,a,c,b)},getDevelopers:function(b,d,c){var a=(typeof(b.owner)!="undefined")?((b.owner==="owner")?"owner":"member"):null;this.getRelatedObjects(Ext.io.Developer,a,d,c)},getApps:function(b,a){this.getRelatedObjects(Ext.io.App,null,b,a)},getGroups:function(b,a){this.getRelatedObjects(Ext.io.Group,null,b,a)},manageDeveloper:function(d,a,c,b){Ext.io.Io.getMessagingProxy(function(e){e.getService({name:"TeamService"},function(g,f){if(g){g[d](function(h){if(h.status=="success"){c.call(b)}else{c.call(b,h.error)}},this.getId(),a.id)}else{c.call(b,f)}},this)},this)},addDeveloper:function(a,c,b){this.manageDeveloper("addDeveloper",a,c,b)},removeDeveloper:function(a,d,b){var c=(Ext.io.Io.getIdStore().getId("developer")===a.id)?"removeSelf":"removeDeveloper";this.manageDeveloper(c,a,d,b)},inviteDeveloper:function(a,c,b){Ext.io.Io.getMessagingProxy(function(d){d.getService({name:"TeamManager"},function(e,f){if(e){e.inviteDeveloper(function(g){if(g.status=="success"){c.call(b)}else{c.call(b,g.error)}},{username:a.username,org:this.getId()})}else{c.call(b,f)}},this)},this)},getConnectedDevelopers:function(b,a){Ext.io.Io.getMessagingProxy(function(c){c.getService({name:"PresenceService"},function(d,e){if(d){d.getConnectedDevelopers(function(f){if(f.status=="success"){var h=[];for(var g=0;g<f.value.length;g++){h.push(Ext.create(Ext.io.Developer,{id:f.value[g]._key,data:f.value[g].data}))}b.call(a,h)}else{b.call(a,undefined,f.error)}},this.getId())}else{b.call(a,undefined,e)}},this)},this)},findServices:function(a,c,b){if(Ext.cf.util.ParamValidator.validateOptionsCallbackScope([{name:"query",type:"string"}],arguments,"Ext.io.Team","findServices")){this.findRelatedObjects(Ext.io.Service,this.getId(),null,a.query,c,b)}}});Ext.define("Ext.io.Version",{extend:"Ext.io.Object",statics:{get:function(a,c,b){this.getObject(a.id,c,b)}},deploy:function(b,a){Ext.io.Io.getMessagingProxy(function(c){c.getService({name:"VersionService"},function(d,e){if(d){d.deploy(function(f){if(f.status=="success"){b.call(a)}else{b.call(a,f.error)}},this.getId())}else{b.call(a,e)}},this)},this)},undeploy:function(b,a){Ext.io.Io.getMessagingProxy(function(c){c.getService({name:"VersionService"},function(d,e){if(d){d.undeploy(function(f){if(f.status=="success"){b.call(a)}else{b.call(a,f.error)}},this.getId())}else{b.call(a,e)}},this)},this)},getApp:function(b,a){this.getRelatedObject(Ext.io.App,null,null,b,a)}});if(!Ext.getVersion("extjs")){Ext.define("Ext.io.ux.AuthButton",{extend:"Ext.Button",xtype:"sioAuthButton",requires:["Ext.Button"],config:{text:"Login"}})};